<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Docker Series (Chapter 3): Managing-Container-Resources</title>
    <url>//Cloud/Docker/Managing-container-resources/index.html</url>
    <content><![CDATA[<blockquote>
<p>For information on how to install Docker, please refer to: <a href="https://blog.sunhaoyang.net/Cloud/Docker/Installing-docker-engine-in-Ubuntu/index.html">Docker Series (Chapter 0): Installing docker-engine in Ubuntu</a>.</p>
</blockquote>
<blockquote>
<p>For guidance on how to create and use Docker images, please refer to: <a href="https://blog.sunhaoyang.net/Cloud/Docker/Building-and-using-images/index.html">Docker Series (Chapter 1): Building and using images</a>.</p>
</blockquote>
<blockquote>
<p>For guidance on how to create and use Docker containers, please refer to: <a href="https://blog.sunhaoyang.net/Cloud/Docker/Creating-and-using-containers/index.html">Docker Series (Chapter 2): Creating and Using containers</a>.</p>
</blockquote>
<p>Up to now, you could install the docker-engine in Ubuntu operating system, pull docker images from public&#x2F;private image repositories, develop Dockerfile, use the Dockerfile to create containers and use some command to do some execution interacting with containers.</p>
<p>However, do you have some ideas about how are the resources of a created container bound? How much memory, how much disk, and what are the allocated IOPS?</p>
<p>In this Chapter3, let’s find the answer.</p>
<h2 id="Memory-Quotas"><a href="#Memory-Quotas" class="headerlink" title="Memory Quotas"></a>Memory Quotas</h2><h3 id="Identifying-issues-by-observing-memory-usage"><a href="#Identifying-issues-by-observing-memory-usage" class="headerlink" title="Identifying issues by observing memory usage"></a>Identifying issues by observing memory usage</h3><p>At first, let me create two containers.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker run -d --name=http1 httpd</span><br><span class="line">9871abf3948eeec881498356073c4ce2b11c1631d533a92ce44be64b088af880</span><br><span class="line"></span><br><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker run -d --name=http2 httpd</span><br><span class="line">92cfd46a822b69bdc55fc1460e8698a79a4af7382cda9b038b45654017aef0a2</span><br></pre></td></tr></table></figure>

<p>Then, let’s observe the memory size of each container.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker exec -it http1 grep MemTotal /proc/meminfo</span><br><span class="line">MemTotal:       32741384 kB</span><br><span class="line"></span><br><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker exec -it http2 grep MemTotal /proc/meminfo</span><br><span class="line">MemTotal:       32741384 kB</span><br></pre></td></tr></table></figure>

<p>Finally, let’s check the memory size of local physical machine.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ free -h</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           31Gi       7.5Gi       1.7Gi        13Gi        22Gi       9.2Gi</span><br><span class="line">Swap:          31Gi       335Mi        31Gi</span><br></pre></td></tr></table></figure>

<p>Based on the hands-on exercise just now, it is obviously that <code>the memory allocation for each container equals the total memory of the physical host</code>. This means better performance, but it also means that as business demands increase, resource contention may occur. This is something that should generally be avoided during operational planning.</p>
<h3 id="Managing-memory-quotas"><a href="#Managing-memory-quotas" class="headerlink" title="Managing memory quotas"></a>Managing memory quotas</h3><p>We could use <code>-m</code> or <code>--memory</code> parameter to specify the limitation of memory usage, to allocate the memory quotas to containers.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker run -it --name=memlimit -m 500M progrium/stress \</span><br><span class="line">--vm 1 --vm-bytes 400M</span><br><span class="line">stress: dbug: [1] using backoff sleep of 3000us</span><br><span class="line">stress: info: [1] dispatching hogs: 0 cpu, 0 io, 1 vm, 0 hdd</span><br><span class="line">stress: dbug: [1] --&gt; hogvm worker 1 [8] forked</span><br><span class="line">stress: dbug: [8] allocating 524288000 bytes ...</span><br><span class="line">stress: dbug: [8] touching bytes in strides of 4096 bytes ...</span><br><span class="line">stress: dbug: [8] freed 524288000 bytes</span><br><span class="line">stress: dbug: [8] allocating 524288000 bytes ...</span><br><span class="line">stress: dbug: [8] touching bytes in strides of 4096 bytes ...</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker run -it --name=memfailed -m 500M progrium/stress \</span><br><span class="line">--vm 1 --vm-bytes 700M</span><br><span class="line">stress: info: [1] dispatching hogs: 0 cpu, 0 io, 1 vm, 0 hdd</span><br><span class="line">stress: dbug: [1] using backoff sleep of 3000us</span><br><span class="line">stress: dbug: [1] --&gt; hogvm worker 1 [8] forked</span><br><span class="line">stress: dbug: [8] allocating 734003200 bytes ...</span><br><span class="line">stress: dbug: [8] touching bytes in strides of 4096 bytes ...</span><br><span class="line">stress: FAIL: [1] (416) &lt;-- worker 8 got signal 9</span><br><span class="line">stress: WARN: [1] (418) now reaping child worker processes</span><br><span class="line">stress: FAIL: [1] (422) kill error: No such process</span><br><span class="line">stress: FAIL: [1] (452) failed run completed in 0s</span><br></pre></td></tr></table></figure>

<ol>
<li><p>-it</p>
<p>-i: Keep the container’s standard input (stdin) open, allowing you to interact with the container.</p>
<p>-t: Allocate a pseudo-TTY (terminal) for the container, so you can see the output and interact with the container. These two flags are usually used together, meaning you want to enter the container and interact with it.</p>
</li>
<li><p>–name&#x3D;memfailed</p>
</li>
</ol>
<p>Assigns a name to the container. In this case, the container is named memfailed. This allows you to reference the container by its name rather than its ID in future commands.</p>
<ol start="3">
<li>-m 500M</li>
</ol>
<p>Limits the container’s maximum memory usage to 500MB. If the container exceeds this limit, it will be killed, and an “Out of Memory” (OOM) error will occur.</p>
<ol start="4">
<li>progrium&#x2F;stress</li>
</ol>
<p>Specifies the Docker image to run. In this case, it’s the progrium&#x2F;stress image, which contains the stress tool that can be used to generate load on the system.</p>
<ol start="5">
<li>–vm 1</li>
</ol>
<p>This means that the stress tool will start one virtual memory load (vm) process. The number 1 indicates that one such process will be started.</p>
<ol start="6">
<li>–vm-bytes 700M</li>
</ol>
<p>The –vm-bytes parameter specifies the amount of memory to allocate for each virtual memory load process. In this case, it is set to 700MB. Therefore, the stress tool will attempt to allocate 700MB of virtual memory for the load process.</p>
<p>It is clear for us why the result is different. 400M is legal, 700M is illegal.</p>
<p>Therefore, we set the parameter <code>-m</code> or <code>--memory</code> works to our containers.</p>
<h2 id="Managing-CPU-Quotas"><a href="#Managing-CPU-Quotas" class="headerlink" title="Managing CPU Quotas"></a>Managing CPU Quotas</h2><p>By default, all containers can use the same CPU resources without any restrictions.</p>
<p>Similar to memory, when the CPU demand of a container increases, it will lead to CPU resource contention. <code>However, unlike memory, where an absolute amount is specified, CPU allocation is done by specifying a relative weight.</code></p>
<p>The <code>--cpu-shares parameter</code> is used to allocate CPU resources.</p>
<p><code>By default, this value is set to 1024</code>.</p>
<p><code>Note that when the workload in the current container is idle, other containers have the right to use its idle CPU cycles, which ensures the performance of the workloads.</code></p>
<blockquote>
<p>CPU resource limits only take effect when the physical machine’s resources are insufficient, and the allocation is based on priority. When other containers are idle, the busy containers can utilize all available CPU resources.</p>
</blockquote>
<h2 id="Managing-I-O-Quotas"><a href="#Managing-I-O-Quotas" class="headerlink" title="Managing I&#x2F;O Quotas"></a>Managing I&#x2F;O Quotas</h2><p>We could use the parameter <code>--blkio-weight 300</code> to set the limitation of I&#x2F;O quotas.</p>
<p>Under normal circumstances, a container with a weight of 600 will have twice the I&#x2F;O capacity compared to one with a weight of 300. You can test the I&#x2F;O performance using the following command.</p>
<p>In actual tests, there is no resource contention. <code>This setting will only be reflected during I/O contention.</code> So, 600 weight is faster than 300 weight, but it is not twice the I&#x2F;O capacity.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker run -d --name 600io --blkio-weight 600 httpd</span><br><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker exec -it 600io /bin/bash</span><br><span class="line">root@fda33d6184a5:/usr/local/apache2# time dd if=/dev/zero of=test.out bs=1M count=10240</span><br><span class="line">10240+0 records in</span><br><span class="line">10240+0 records out</span><br><span class="line">10737418240 bytes (11 GB, 10 GiB) copied, 35.8148 s, 300 MB/s</span><br><span class="line"></span><br><span class="line">real 0m35.959s</span><br><span class="line">user 0m0.011s</span><br><span class="line">sys 0m14.162s</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker run -d --name 300io --blkio-weight 300 httpd</span><br><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker exec -it 300io /bin/bash</span><br><span class="line">root@7d406deec8ac:/usr/local/apache2# time dd if=/dev/zero of=test.out bs=1M count=10240</span><br><span class="line">10240+0 records in</span><br><span class="line">10240+0 records out</span><br><span class="line">10737418240 bytes (11 GB, 10 GiB) copied, 44.8088 s, 240 MB/s</span><br><span class="line"></span><br><span class="line">real 0m44.897s</span><br><span class="line">user 0m0.025s</span><br><span class="line">sys 0m16.777s</span><br></pre></td></tr></table></figure>

<h2 id="The-underlying-implementation-of-resource-limits"><a href="#The-underlying-implementation-of-resource-limits" class="headerlink" title="The underlying implementation of resource limits"></a>The underlying implementation of resource limits</h2><p>Linux uses <code>cgroups</code> to allocate CPU, memory, and I&#x2F;O resource quotas for processes.</p>
<p>We can view the resource quotas for containers through the settings under <code>/sys/fs/cgroup/</code>.</p>
<p>In Linux, cgroups (control groups) allow you to manage and allocate resources to processes. For Docker containers, cgroups are used to enforce resource limitations like CPU usage, memory consumption, and disk I&#x2F;O. The resource settings for these containers can be viewed in the &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F; directory, where cgroup-related files and parameters are exposed.</p>
<p>You can find specific resource limit details for a container by navigating to directories under &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F; that correspond to the container’s cgroup, and checking the values for CPU, memory, and I&#x2F;O usage.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker exec -it http1 /bin/bash</span><br><span class="line">root@9871abf3948e:/usr/local/apache2# ls /sys/fs/cgroup/</span><br><span class="line">blkio  cpu  cpu,cpuacct  cpuacct  cpuset  devices  freezer  hugetlb  memory  misc  net_cls  net_cls,net_prio  net_prio perf_event  pids  rdma systemd</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@9871abf3948e:/usr/local/apache2# ls /sys/fs/cgroup/blkio/</span><br><span class="line">blkio.prio.class   blkio.throttle.io_service_bytes_recursive  blkio.throttle.read_bps_device   blkio.throttle.write_iops_device  notify_on_release</span><br><span class="line">blkio.reset_stats   blkio.throttle.io_serviced      blkio.throttle.read_iops_device  cgroup.clone_children        tasks</span><br><span class="line">blkio.throttle.io_service_bytes  blkio.throttle.io_serviced_recursive     blkio.throttle.write_bps_device  cgroup.procs</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Cloud</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Series (Chapter 2): Creating and Using containers</title>
    <url>//Cloud/Docker/Creating-and-using-containers/index.html</url>
    <content><![CDATA[<blockquote>
<p>For information on how to install Docker, please refer to: <a href="https://blog.sunhaoyang.net/Cloud/Docker/Installing-docker-engine-in-Ubuntu/index.html">Docker Series (Chapter 0): Installing docker-engine in Ubuntu</a>.</p>
</blockquote>
<blockquote>
<p>For guidance on how to create and use Docker images, please refer to: <a href="https://blog.sunhaoyang.net/Cloud/Docker/Building-and-using-images/index.html">Docker Series (Chapter 1): Building and using images</a>.</p>
</blockquote>
<p>Alright, let’s continue learning the following Chapter.</p>
<h2 id="Best-Practices-for-Building-Dockerfiles"><a href="#Best-Practices-for-Building-Dockerfiles" class="headerlink" title="Best Practices for Building Dockerfiles"></a>Best Practices for Building Dockerfiles</h2><ol>
<li><p>Containers should be ephemeral&#x2F;temporary.</p>
</li>
<li><p>Avoid installing unnecessary packages.</p>
</li>
<li><p>Each container should have only one purpose.</p>
</li>
<li><p>Avoid having too many layers in a container.</p>
</li>
<li><p>Multi-line sorting.</p>
</li>
<li><p>Leveraging cache.</p>
</li>
</ol>
<p>Let me list an example here.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Base image</span></span><br><span class="line"><span class="keyword">FROM</span> httpd</span><br><span class="line"><span class="comment"># The person who creates and maintains it</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> Haoyang Sun</span><br><span class="line"><span class="comment"># RUN command to execute</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">echo</span> hello container &gt; \</span></span><br><span class="line"><span class="language-bash">/usr/local/apache2/htdocs/index.html</span></span><br><span class="line"><span class="comment"># expose port as 80</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"><span class="comment"># Define the working directory</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /usr/local/apache2/htdocs</span></span><br></pre></td></tr></table></figure>

<p>Let’s use the Dockerfile to create a new image here.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker build -t web:v1 .</span><br><span class="line">[+] Building 14.4s (8/8) FINISHED                                docker:default</span><br><span class="line"> =&gt; [internal] load build definition from Dockerfile                       0.0s</span><br><span class="line"> =&gt; =&gt; transferring dockerfile: 189B                                       0.0s</span><br><span class="line"> =&gt; WARN: MaintainerDeprecated: Maintainer instruction is deprecated in f  0.0s</span><br><span class="line"> =&gt; [internal] load metadata for docker.io/library/httpd:latest            4.8s</span><br><span class="line"> =&gt; [auth] library/httpd:pull token for registry-1.docker.io               0.0s</span><br><span class="line"> =&gt; [internal] load .dockerignore                                          0.0s</span><br><span class="line"> =&gt; =&gt; transferring context: 2B                                            0.0s</span><br><span class="line"> =&gt; [1/3] FROM docker.io/library/httpd:latest@sha256:437b9f7d469dd606fa6d  8.9s</span><br><span class="line"> =&gt; =&gt; resolve docker.io/library/httpd:latest@sha256:437b9f7d469dd606fa6d  0.0s</span><br><span class="line"> =&gt; =&gt; sha256:3b71e7157e7a19c02c985d0962e01b5bbda6e329b24 2.10kB / 2.10kB  0.0s</span><br><span class="line"> =&gt; =&gt; sha256:c14eb63a15a0449b7f25117f57bc1846c023cd706769acb 145B / 145B  1.7s</span><br><span class="line"> =&gt; =&gt; sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d 32B / 32B  0.5s</span><br><span class="line"> =&gt; =&gt; sha256:437b9f7d469dd606fa6d2a5f9a3be55fe3af7e0c6 10.16kB / 10.16kB  0.0s</span><br><span class="line"> =&gt; =&gt; sha256:f7d8bafbd9a9fc570c19628411a8441e8dc6697aa43 7.88kB / 7.88kB  0.0s</span><br><span class="line"> =&gt; =&gt; sha256:af302e5c37e9dc1dbe2eadc8f5059d82a914066b5 28.21MB / 28.21MB  7.1s</span><br><span class="line"> =&gt; =&gt; sha256:abbcd5aab3664cf64a964a4c608f66689db8bcfe8ab 4.20MB / 4.20MB  4.9s</span><br><span class="line"> =&gt; =&gt; sha256:04e5e6c6b4973d97b8b076a550d50ef5ddbfc6d12 26.06MB / 26.06MB  8.4s</span><br><span class="line"> =&gt; =&gt; sha256:7f5fb3689eaee4c87c2455a8e061d6bb52da300369b0325 293B / 293B  5.4s</span><br><span class="line"> =&gt; =&gt; extracting sha256:af302e5c37e9dc1dbe2eadc8f5059d82a914066b541b0d1a  0.6s</span><br><span class="line"> =&gt; =&gt; extracting sha256:c14eb63a15a0449b7f25117f57bc1846c023cd706769acb8  0.0s</span><br><span class="line"> =&gt; =&gt; extracting sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6  0.0s</span><br><span class="line"> =&gt; =&gt; extracting sha256:abbcd5aab3664cf64a964a4c608f66689db8bcfe8abea5b9  0.1s</span><br><span class="line"> =&gt; =&gt; extracting sha256:04e5e6c6b4973d97b8b076a550d50ef5ddbfc6d125439f26  0.3s</span><br><span class="line"> =&gt; =&gt; extracting sha256:7f5fb3689eaee4c87c2455a8e061d6bb52da300369b03257  0.0s</span><br><span class="line"> =&gt; [2/3] RUN echo hello container &gt;   /usr/local/apache2/htdocs/index.ht  0.5s</span><br><span class="line"> =&gt; [3/3] WORKDIR /usr/local/apache2/htdocs                                0.0s</span><br><span class="line"> =&gt; exporting to image                                                     0.1s</span><br><span class="line"> =&gt; =&gt; exporting layers                                                    0.0s</span><br><span class="line"> =&gt; =&gt; writing image sha256:e30e7b98cd48deef0229fbdea27d499b039bf06f2bf3c  0.0s</span><br><span class="line"> =&gt; =&gt; naming to docker.io/library/web:v1                                  0.0s</span><br><span class="line"></span><br><span class="line"> 1 warning found (use docker --debug to expand):</span><br><span class="line"> - MaintainerDeprecated: Maintainer instruction is deprecated in favor of using label (line 3)</span><br></pre></td></tr></table></figure>

<p>After building the iamge called: web:v1, let’s check the list of images.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker images</span><br><span class="line">REPOSITORY                                                                                               TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">web                                                                                                      v1        e30e7b98cd48   7 seconds ago   148MB</span><br><span class="line">ubuntu                                                                                                   20.04     9df6d6105df2   5 months ago    72.8MB</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<h2 id="Best-Practices-for-naming-the-image"><a href="#Best-Practices-for-naming-the-image" class="headerlink" title="Best Practices for naming the image"></a>Best Practices for naming the image</h2><p>Obviously, We successfully creating a new images about 7 seconds ago. The image’s name is web and its tag is v1. Its size is about 148MB.</p>
<p>So, what is the reason we could quickly find the image we want?</p>
<h3 id="Image-naming-format"><a href="#Image-naming-format" class="headerlink" title="Image naming format"></a>Image naming format</h3><p><code>REPOSITORY+TAG</code>. It is recommended to use <code>version number</code> as the naming convention.</p>
<p>A simple and clear image naming format allows users to quickly identify the image they need without the need for testing.</p>
<h3 id="Explanation-of-the-‘latest’-tag-and-its-usage"><a href="#Explanation-of-the-‘latest’-tag-and-its-usage" class="headerlink" title="Explanation of the ‘latest’ tag and its usage"></a>Explanation of the ‘latest’ tag and its usage</h3><p>If <code>no tag</code> is specified when building the image, the default <code>latest</code> tag will be used.</p>
<p>Therefore, when you see ‘latest’ as the tag of an image, it does not necessarily mean that this is the latest version. It simply means that no tag was specified when the image was created, and nothing more.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker build -t web .</span><br><span class="line">[+] Building 2.4s (8/8) FINISHED                                                                                                                                               docker:default</span><br><span class="line"> =&gt; [internal] load build definition from Dockerfile                                                                                                                                     0.0s</span><br><span class="line"> =&gt; =&gt; transferring dockerfile: 189B                                                                                                                                                     0.0s</span><br><span class="line"> =&gt; WARN: MaintainerDeprecated: Maintainer instruction is deprecated in favor of using label (line 3)                                                                                    0.0s</span><br><span class="line"> =&gt; [internal] load metadata for docker.io/library/httpd:latest                                                                                                                          2.3s</span><br><span class="line"> =&gt; [auth] library/httpd:pull token for registry-1.docker.io                                                                                                                             0.0s</span><br><span class="line"> =&gt; [internal] load .dockerignore                                                                                                                                                        0.0s</span><br><span class="line"> =&gt; =&gt; transferring context: 2B                                                                                                                                                          0.0s</span><br><span class="line"> =&gt; [1/3] FROM docker.io/library/httpd:latest@sha256:437b9f7d469dd606fa6d2a5f9a3be55fe3af7e0c66e0329da8c14b291ae0d31c                                                                    0.0s</span><br><span class="line"> =&gt; CACHED [2/3] RUN echo hello container &gt;   /usr/local/apache2/htdocs/index.html                                                                                                       0.0s</span><br><span class="line"> =&gt; CACHED [3/3] WORKDIR /usr/local/apache2/htdocs                                                                                                                                       0.0s</span><br><span class="line"> =&gt; exporting to image                                                                                                                                                                   0.0s</span><br><span class="line"> =&gt; =&gt; exporting layers                                                                                                                                                                  0.0s</span><br><span class="line"> =&gt; =&gt; writing image sha256:e30e7b98cd48deef0229fbdea27d499b039bf06f2bf3c1d137230e5266cd40a5                                                                                             0.0s</span><br><span class="line"> =&gt; =&gt; naming to docker.io/library/web                                                                                                                                                   0.0s</span><br><span class="line"></span><br><span class="line"> 1 warning found (use docker --debug to expand):</span><br><span class="line"> - MaintainerDeprecated: Maintainer instruction is deprecated in favor of using label (line 3)</span><br></pre></td></tr></table></figure>

<p>It is visibly that each period of creating the same image is <code>zero</code>.</p>
<p>Here is the function of <code>cache</code>. Because I have already creating the same image before, it may reuse the cache this time.</p>
<p>Therefore, it will dramatically shorten the creating time.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:/HDD/learn/docker/apache2$ docker images</span><br><span class="line">REPOSITORY                                                                                               TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">web                                                                                                      latest    e30e7b98cd48   15 minutes ago   148MB</span><br><span class="line">web                                                                                                      v1        e30e7b98cd48   15 minutes ago   148MB</span><br><span class="line">ubuntu                                                                                                   20.04     9df6d6105df2   5 months ago     72.8MB</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>We could find there are two images, both of them are called web and the image id are the same. The difference is <code>tag</code>, this time I did not add the tag after the image name.</p>
<p>Therefore, the default tag is <code>latest</code>.</p>
<h2 id="Basic-commands-about-images"><a href="#Basic-commands-about-images" class="headerlink" title="Basic commands about images"></a>Basic commands about images</h2><ul>
<li><code>docker build -t image_name:tag_name .</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t web:v1 .</span><br></pre></td></tr></table></figure>

<ul>
<li><code>docker commit container_name image_name:tag_name</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker commit web web:v2</span><br></pre></td></tr></table></figure>

<ul>
<li><code>docker save image_name:tag_name -o compression_name.tar</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker save web:v2 -o web_v2.tar</span><br></pre></td></tr></table></figure>

<ul>
<li><code>docker load -i compression_name</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp web_v2.tar user@ip:/path/to/images</span><br><span class="line">docker load -i web_v2.tar</span><br></pre></td></tr></table></figure>

<h2 id="2-Methods-of-creating-containers-with-image"><a href="#2-Methods-of-creating-containers-with-image" class="headerlink" title="2 Methods of creating containers with image"></a>2 Methods of creating containers with image</h2><p>As we discuss in <a href="https://blog.sunhaoyang.net/Cloud/Docker/Building-and-using-images/index.html">Docker Series (Chapter 1): Building and using images</a>, there are two methods to create a container by using an image.</p>
<ul>
<li><p><code>docker run</code></p>
<p><strong>docker run</strong> is a basic Docker command used to directly start a new container. It is ideal for running a container individually to perform simple tasks or experiments.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8080:80 --name my-container nginx</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>docker compose</code></p>
<p><strong>docker-compose</strong> is a tool used to define and manage <code>multi-container</code> Docker applications.</p>
<p>It configures services, networks, volumes, and more through a <code>docker-compose.yaml</code> file. docker-compose is ideal for managing applications made up of multiple containers, simplifying the configuration and startup of containers.</p>
<p>It is used for one-click start, stop, and management of multiple containers.</p>
<p>So, <code>docker-compose</code> builds on top of <code>docker run</code>, providing a more efficient and manageable way to handle multiple containers. It is especially useful for managing microservices architectures in development, testing, and production environments.</p>
</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Feature</th>
<th align="center">docker run</th>
<th align="center">docker-compose</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>Use Case</strong></td>
<td align="center">Single container, simple tasks or testing</td>
<td align="center">Multiple containers, complex applications, service dependencies management</td>
</tr>
<tr>
<td align="center"><strong>Configuration Method</strong></td>
<td align="center">Configured through command-line arguments</td>
<td align="center">Defined through the <code>docker-compose.yml</code> file with multiple containers, networks, volumes, etc.</td>
</tr>
<tr>
<td align="center"><strong>Start Multiple Containers</strong></td>
<td align="center">Need to start each container individually</td>
<td align="center">Use <code>docker-compose up</code> to start all containers at once</td>
</tr>
<tr>
<td align="center"><strong>Service Dependency Management</strong></td>
<td align="center">Manually manage dependencies between containers</td>
<td align="center">Define dependencies between containers in the <code>docker-compose.yml</code> file</td>
</tr>
<tr>
<td align="center"><strong>Port Mapping</strong></td>
<td align="center">Manually map ports, set individually for each container</td>
<td align="center">Unified port mapping management for multiple containers in the <code>docker-compose.yml</code> file</td>
</tr>
<tr>
<td align="center"><strong>File Management</strong></td>
<td align="center">No file configuration, relies on command-line arguments</td>
<td align="center">Uses docker-compose.yml file for centralized configuration and service management</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Cloud</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Scrum Guide (Part2 of 2)</title>
    <url>//Management/Scrum/Scrum-Guide2/index.html</url>
    <content><![CDATA[<p>After completing the <a href="https://blog.sunhaoyang.net/Management/Scrum/Scrum-Guide1/index.html">Scrum Guide (Part1 of 2)</a>, I will further explore the structure of Lean and Scrum, along with other related aspects in this chapter.</p>
<h2 id="Scrum-feedback-loop"><a href="#Scrum-feedback-loop" class="headerlink" title="Scrum feedback loop"></a>Scrum feedback loop</h2><p>Scrum is a <code>lightweight</code>, <code>flexible</code> <code>framework</code> that helps individuals, teams, and organisations deliver <code>adaptive solutions</code> <code>driven by value</code>, even in <code>dynamic business environments</code>. It uses an <code>iterative</code>, <code>incremental delivery</code> approach, where <code>learning occurs throughout the process</code>, enabling the delivery of maximum value in the shortest possible time and with minimal cost.</p>
<p>Such a loop includes: <code>Customer&#39;s perspective</code> -&gt; <code>Product goal</code> -&gt; <code>Product Backlog</code> -&gt; <code>Sprint Backlog</code> -&gt; <code>Execution</code> -&gt; <code>Review</code> -&gt; <code>Retrospective</code> -&gt; <code>Increments</code> -&gt; <code>linear regression testing</code> -&gt; <code>Opreation</code>-&gt;<code>Feedback</code>-&gt;<code>Validate</code>-&gt;<code>Product Backlog</code>……recycle again and again…</p>
<p>From the beginning, customers provide the perspectives for the scrum team, Product Owner generates ideas. Then Product Owner designs the product goal. In the meeting, the whole team follow the goal to design the Product Backlog, and Product Owner decide the priority based on the value in final. Then developers will pull tasks&#x2F;user stories from Product Backlog to Sprint Backlog’s TODO list. Developers are completing these tasks&#x2F;user stories in one Sprint period. In addition, the team will take the demonstration for customers during the review meeting. Finally, the whole team will hold a retrospective meeting to do the summary and look back the last sprint for the better next one.</p>
<blockquote>
<p>So, Scrum is not about cost-cutting and efficiency improvements. On the contrary, it often requires more investment.</p>
</blockquote>
<p>Here are the definitions of Working software: It meets the customer’s requirements(<code>valuable</code>) as well as has the eligible <code>quality</code>.</p>
<p>After each cycle of Scrum loop, the delivery artifact is <code>Minimal Viable Product(MVP)</code>.</p>
<p><code>Increments</code> &#x3D; <code>original functions</code> + <code>new functions</code> in total.</p>
<h2 id="Scrum-3-Accountabilities"><a href="#Scrum-3-Accountabilities" class="headerlink" title="Scrum 3 Accountabilities"></a>Scrum 3 Accountabilities</h2><ul>
<li><p><code>Developers</code></p>
<ul>
<li><p>Role: The Development Team is composed of professionals who work together to deliver potentially shippable product(PSP) increments at the end of each sprint. They are cross-functional and self-organising, with the necessary skills to design, develop, test, and deliver the product.</p>
</li>
<li><p>Key Responsibilities:</p>
<p>Deliver the product increment: Build and test features based on the requirements from the product backlog.</p>
<p>Self-organise: Decide how to organise their work and collaborate to meet the sprint goal.</p>
<p>Maintain quality: Ensure that the product is built to a high standard and is potentially shippable at the end of each sprint.</p>
<p>Continuous improvement: Participate in sprint retrospectives to reflect on the work done and look for ways to improve processes.</p>
</li>
</ul>
</li>
<li><p><code>Product Owner</code></p>
<ul>
<li><p>Role: The Product Owner is responsible for defining the product vision and managing the product backlog. They serve as the bridge between the stakeholders (such as customers, business owners, or end users) and the development team.</p>
</li>
<li><p>Key Responsibilities:</p>
<p>Define the product backlog: Prioritise the list of features, enhancements, and fixes that need to be developed.</p>
<p>Ensure value delivery: Make sure that the team works on the most valuable tasks that align with customer and business needs.</p>
<p>Clarify requirements: Provide clear requirements and make decisions on scope, priorities, and trade-offs.</p>
<p>Act as a stakeholder liaison: Communicate with customers, stakeholders, and the team to gather feedback and ensure alignment.</p>
</li>
</ul>
</li>
<li><p><code>Scrum Master</code></p>
<ul>
<li><p>Role: The Scrum Master is responsible for ensuring that the Scrum framework is followed and that the team operates efficiently. They act as a facilitator, coach, and servant leader to both the development team and the Product Owner.</p>
</li>
<li><p>Key Responsibilities:</p>
<p>Facilitate Scrum ceremonies: Help organise and facilitate Scrum events, such as daily standups, sprint planning, sprint reviews, and retrospectives.</p>
<p>Remove impediments: Identify and address obstacles that are blocking the team’s progress.</p>
<p>Coach the team: Support the team in adopting Scrum practices, encourage self-organisation, and foster continuous improvement.</p>
<p>Protect the team: Shield the team from external distractions or disruptions so they can focus on their work.</p>
</li>
</ul>
</li>
</ul>
<h2 id="Scrum-3-Artifacts"><a href="#Scrum-3-Artifacts" class="headerlink" title="Scrum 3 Artifacts"></a>Scrum 3 Artifacts</h2><ul>
<li><p><code>Product Backlog</code></p>
<ul>
<li><p>Definition: The Product Backlog is a dynamic, ordered list of everything that might be needed in the product. It is the single source of work items for the development team.</p>
</li>
<li><p>Key Characteristics:</p>
<p>Managed by the Product Owner: The Product Owner is responsible for prioritising and refining the backlog.</p>
<p>Contains user stories, features, enhancements, and bug fixes: These items are often described as Product Backlog Items (PBIs).</p>
<p>Evolves over time: The backlog is continuously updated based on new information, customer feedback, or market changes.</p>
<p>Prioritisation: Items at the top of the backlog are more important and are typically worked on first, based on their value and urgency.</p>
</li>
<li><p>Purpose: The Product Backlog provides the team with a clear view of the product’s needs and helps ensure that the most important work is always done first.</p>
</li>
</ul>
</li>
<li><p><code>Spring Backlog</code></p>
<ul>
<li><p>Definition: The Sprint Backlog is a list of tasks and Product Backlog Items (PBIs) that the development team commits to completing during a single sprint. It is derived from the Product Backlog.</p>
</li>
<li><p>Key Characteristics:</p>
<p>Owned by the Development Team: The team selects which items to work on during a sprint, based on their capacity and priorities.</p>
<p>Contains both PBIs and tasks: In addition to backlog items, the Sprint Backlog includes detailed tasks needed to complete the items.</p>
<p>Dynamic: The Sprint Backlog is updated as the team works through the sprint, adding new tasks or making adjustments as needed.</p>
<p>Visibility: It provides a clear picture of what work is currently being done and what remains to be completed during the sprint.</p>
</li>
<li><p>Purpose: The Sprint Backlog serves as a focused plan for the current sprint, enabling the team to track progress and deliver the sprint goal.</p>
</li>
</ul>
</li>
<li><p><code>Increment</code></p>
<ul>
<li><p>Definition: The Increment is the sum of all the completed Product Backlog Items during a sprint, plus the work completed in previous sprints. It represents the latest version of the product that is potentially shippable.</p>
</li>
<li><p>Key Characteristics:</p>
<p>Potentially Shippable: At the end of each sprint, the Increment should be in a usable state and could be released to customers if desired.</p>
<p>Completed and Tested: The Increment includes all the features that meet the team’s definition of “done” and are fully integrated and tested.</p>
<p>Represents Progress: Each Increment adds value and progresses the product towards meeting the overall goals and vision.</p>
<p>Visible: The Increment is typically demonstrated during the Sprint Review for inspection by stakeholders.</p>
</li>
<li><p>Purpose: The Increment represents the product’s evolution and the value delivered during a sprint. It provides a tangible result that stakeholders can see, review, and provide feedback on.</p>
</li>
</ul>
</li>
</ul>
<h2 id="Scrum-3-Commitment"><a href="#Scrum-3-Commitment" class="headerlink" title="Scrum 3 Commitment"></a>Scrum 3 Commitment</h2><ul>
<li><p><code>Product Goal</code></p>
<ul>
<li><p>Definition: The Product Goal is the commitment associated with the Product Backlog. It defines what the team is trying to achieve with the product, representing the ultimate objective or target the product is working towards.</p>
</li>
<li><p>Key Characteristics:</p>
</li>
</ul>
<p>Guiding the team: The Product Goal guides the team by providing a clear, overarching target for the product. It helps define the vision and sets direction for the work in the Product Backlog.</p>
<p>Evolving: The Product Goal may evolve over time as business priorities, market conditions, and customer needs change.</p>
<p>Focus for the Product Owner: The Product Owner is responsible for ensuring the Product Goal is well-defined and communicated to the team and stakeholders.</p>
<ul>
<li>Purpose: The Product Goal ensures the team remains focused on delivering value and aligns all product work toward a common objective.</li>
</ul>
</li>
<li><p><code>Sprint Goal</code></p>
<ul>
<li><p>Definition: The Sprint Goal is the commitment related to the Sprint Backlog. It defines what the team aims to achieve during a sprint and is created collaboratively during the Sprint Planning meeting.</p>
</li>
<li><p>Key Characteristics:</p>
</li>
</ul>
<p>Focused objective: The Sprint Goal provides the team with a clear purpose for the sprint and aligns them on what needs to be delivered.</p>
<p>Created during Sprint Planning: It is defined at the start of the sprint, and the team decides which Product Backlog items (PBIs) they will work on to achieve this goal.</p>
<p>Adaptable: The Sprint Goal may evolve slightly during the sprint if new information arises, but the team must stay focused on the overall objective.</p>
<ul>
<li>Purpose: The Sprint Goal ensures that the team is working towards a shared and specific target during the sprint, promoting alignment and providing a measure for success.</li>
</ul>
</li>
<li><p><code>Definiton of Done(DoD)</code></p>
<ul>
<li><p>Definition: The Definition of Done (DoD) is the commitment associated with the Increment. It defines the criteria that must be met for Product Backlog items to be considered complete.</p>
</li>
<li><p>Key Characteristics:</p>
</li>
</ul>
<p>Quality assurance: The DoD ensures that all work completed during the sprint is of high quality, fully tested, and integrated with the existing system.</p>
<p>Agreed by the team: The team agrees on the Definition of Done, which can evolve over time as the team improves their quality standards and practices.</p>
<p>Transparency: The Definition of Done provides transparency to stakeholders, allowing them to understand what “done” really means in terms of product quality.</p>
<ul>
<li>Purpose: The Definition of Done ensures that the Increment is truly finished and meets the necessary standards, providing confidence that the product is ready for release or further testing.</li>
</ul>
</li>
</ul>
<h2 id="Scrum-5-Events"><a href="#Scrum-5-Events" class="headerlink" title="Scrum 5 Events"></a>Scrum 5 Events</h2><ul>
<li><p><code>Sprint</code></p>
<ul>
<li><p>Definition: The Sprint is the core event in Scrum and refers to the time-boxed iteration during which the team works to complete a set of items from the Product Backlog.</p>
</li>
<li><p>Key Characteristics:</p>
<ul>
<li><p>Duration: Typically lasts between 1 to 4 weeks, depending on the team’s preference.</p>
</li>
<li><p>Goal: At the end of the Sprint, a potentially shippable product increment is delivered, which should meet the Definition of Done.</p>
</li>
<li><p>Consistency: Each Sprint follows the same cycle and is followed by a review and retrospective.</p>
</li>
</ul>
</li>
<li><p>Purpose: The Sprint serves as the fundamental cycle where all other events occur. It enables teams to focus on delivering value incrementally.</p>
</li>
</ul>
</li>
<li><p><code>Sprint Planning</code></p>
<ul>
<li><p>Definition: Sprint Planning is the event where the team and the Product Owner collaboratively define the work that will be completed in the upcoming Sprint.</p>
</li>
<li><p>Key Characteristics:</p>
<ul>
<li><p>Who: The Scrum Team (Product Owner, Scrum Master, and Development Team) participates.</p>
</li>
<li><p>What: The team defines the Sprint Goal, selects items from the Product Backlog to work on, and creates a plan for how to complete those items.</p>
</li>
<li><p>Time-box: Typically lasts between 2 to 4 hours for a 2-week Sprint.</p>
</li>
</ul>
</li>
<li><p>Purpose: Sprint Planning ensures that everyone is aligned on what needs to be achieved and how to accomplish it.</p>
</li>
</ul>
</li>
<li><p><code>Daily Scrum</code></p>
<ul>
<li><p>Definition: The Daily Scrum (also known as the Daily Standup) is a short, time-boxed meeting held every day of the Sprint to inspect progress and adapt the plan.</p>
</li>
<li><p>Key Characteristics:</p>
<ul>
<li><p>Who: Primarily the Development Team; the Product Owner and Scrum Master can attend but do not actively participate unless necessary.</p>
</li>
<li><p>Format: Each team member answers three questions:</p>
<ol>
<li><p>What did I complete yesterday to help the team achieve the Sprint Goal?</p>
</li>
<li><p>What will I do today to help the team achieve the Sprint Goal?</p>
</li>
<li><p>Are there any blockers or challenges?</p>
</li>
</ol>
</li>
<li><p>Time-box: Typically lasts 15 minutes.</p>
</li>
</ul>
</li>
<li><p>Purpose: The Daily Scrum allows the team to inspect their progress, make adjustments, and stay focused on the Sprint Goal.</p>
</li>
</ul>
</li>
<li><p><code>Sprint Review</code></p>
<ul>
<li><p>Definition: The Sprint Review is an event that occurs at the end of the Sprint where the team demonstrates the work they have completed to stakeholders and gathers feedback.</p>
</li>
<li><p>Key Characteristics:</p>
<ul>
<li><p>Who: The Scrum Team and key stakeholders (e.g., customers, managers) participate.</p>
</li>
<li><p>What: The Development Team showcases the Increment, and the Product Owner discusses the Product Backlog and progress towards the Product Goal. Stakeholders provide feedback.</p>
</li>
<li><p>Time-box: Typically lasts 1 to 2 hours for a 2-week Sprint.</p>
</li>
</ul>
</li>
<li><p>Purpose: The Sprint Review allows stakeholders to inspect the Increment, provide feedback, and ensure that the product is evolving in the right direction.</p>
</li>
</ul>
</li>
<li><p><code>Spring Retrospective</code></p>
<ul>
<li><p>Definition: The Sprint Retrospective is a meeting held after the Sprint Review and before the next Sprint Planning to reflect on the Sprint process and identify areas for improvement.</p>
</li>
<li><p>Key Characteristics:</p>
<ul>
<li><p>Who: The Scrum Team (Product Owner, Scrum Master, and Development Team) participate.</p>
</li>
<li><p>What: The team reflects on what went well, what could be improved, and what actions can be taken to improve in the next Sprint.</p>
</li>
<li><p>Time-box: Typically lasts 1 to 1.5 hours for a 2-week Sprint.</p>
</li>
</ul>
</li>
<li><p>Purpose: The Sprint Retrospective helps the team identify areas for improvement in both their processes and collaboration, fostering continuous improvement.</p>
</li>
</ul>
</li>
</ul>
<h2 id="Scrum-5-Values"><a href="#Scrum-5-Values" class="headerlink" title="Scrum 5 Values"></a>Scrum 5 Values</h2><ul>
<li><p><code>Commitment</code></p>
<ul>
<li><p>Definition: Commitment in Scrum refers to the team’s dedication to achieving the Sprint Goal and delivering the highest value possible within the agreed-upon timeframe.</p>
</li>
<li><p>Key Characteristics:</p>
<ul>
<li><p>To the Sprint Goal: The team commits to achieving the goals defined for the Sprint, ensuring that their work aligns with the overall objectives.</p>
</li>
<li><p>To the Team: Team members commit to supporting each other, sharing knowledge, and working collaboratively to achieve success.</p>
</li>
<li><p>To Continuous Improvement: The team commits to reflecting on their performance and looking for ways to improve in the future.</p>
</li>
</ul>
</li>
<li><p>Purpose: Commitment ensures that the team stays focused, works with determination, and is accountable for the work they undertake.</p>
</li>
</ul>
</li>
<li><p><code>Focus</code></p>
<ul>
<li><p>Definition: Focus refers to the ability to concentrate on the most important tasks and priorities, ensuring that the team’s energy is directed toward achieving the Sprint Goal and delivering value.</p>
</li>
<li><p>Key Characteristics:</p>
<ul>
<li><p>On the Sprint Goal: The team focuses on delivering the Sprint Goal, ensuring that they avoid distractions and work on the highest-priority tasks.</p>
</li>
<li><p>On the task at hand: During the Sprint, team members focus on completing individual tasks efficiently without being diverted by external factors.</p>
</li>
<li><p>On the customer’s needs: The team keeps the customer’s needs and the Product Goal in mind, ensuring that the work they’re doing delivers value to the end user.</p>
</li>
</ul>
</li>
<li><p>Purpose: Focus helps the team maintain alignment with the Sprint Goal and ensures that energy is not wasted on irrelevant work or distractions.</p>
</li>
</ul>
</li>
<li><p><code>Openness</code></p>
<ul>
<li><p>Definition: Openness refers to the team’s willingness to share information, feedback, and progress with each other and stakeholders, creating a culture of transparency.</p>
</li>
<li><p>Key Characteristics:</p>
<ul>
<li><p>Transparency: The team shares information openly, allowing stakeholders and each other to understand progress, challenges, and successes.</p>
</li>
<li><p>Honest communication: Team members are open and honest about what’s going well and where they might be facing difficulties, ensuring issues are addressed early.</p>
</li>
<li><p>Welcoming feedback: The team is open to receiving feedback from others, viewing it as an opportunity for improvement rather than criticism.</p>
</li>
</ul>
</li>
<li><p>Purpose: Openness fosters trust and collaboration, allowing the team to work more effectively and respond to challenges more quickly.</p>
</li>
</ul>
</li>
<li><p><code>Respect</code></p>
<ul>
<li><p>Definition: Respect in Scrum means valuing each other’s contributions, listening to different perspectives, and trusting that each person is bringing valuable expertise to the team.</p>
</li>
<li><p>Key Characteristics:</p>
<ul>
<li><p>Value each individual’s expertise: Team members respect each other’s skills, knowledge, and experiences, fostering a collaborative and supportive environment.</p>
</li>
<li><p>Listening actively: The team listens to each other’s ideas and feedback, making sure everyone’s voice is heard and valued.</p>
</li>
<li><p>Trust: Team members trust each other to do their best and contribute to the team’s success, supporting one another’s development and growth.</p>
</li>
</ul>
</li>
<li><p>Purpose: Respect ensures that team members work together harmoniously, value diversity of thought, and collaborate to achieve the best possible outcomes.</p>
</li>
</ul>
</li>
<li><p><code>Courage</code></p>
<ul>
<li><p>Definition: Courage in Scrum means having the bravery to take on challenging work, make tough decisions, and speak up when issues or concerns arise.</p>
</li>
<li><p>Key Characteristics:</p>
<ul>
<li><p>Taking on challenges: The team is willing to tackle difficult tasks, knowing that they might encounter obstacles along the way.</p>
</li>
<li><p>Speaking up: Team members have the courage to raise concerns, provide honest feedback, and address issues without fear of judgment.</p>
</li>
<li><p>Trying new things: The team is willing to experiment with new approaches or techniques to improve the product or process.</p>
</li>
</ul>
</li>
<li><p>Purpose: Courage helps the team push boundaries, innovate, and continuously improve, knowing that failure is a part of the learning process.</p>
</li>
</ul>
</li>
</ul>
<h2 id="Sprint-1-extra-activity"><a href="#Sprint-1-extra-activity" class="headerlink" title="Sprint 1 extra activity"></a>Sprint 1 extra activity</h2><p><code>Product Backlog Refinement</code></p>
<p>The entire team (PO + Dev + SM) collaborates together.</p>
<p>The PO ensures that the activity is carried out in an organised manner.</p>
<p>It typically happens before the sprint begins.</p>
<p>This is not a formal meeting: it is usually informal, offline, and happens continuously (spending a little time each day).</p>
<p>It involves a small group, with short, high-intensity brainstorming sessions.</p>
<p>The Product Owner and Developers co-create the product feature details.<br>Behaviour Driven Development (BDD) is recommended.”</p>
<p>This translation conveys the same meaning in a clear, professional British English style, highlighting the collaborative and informal nature of the process.</p>
<h2 id="Lean"><a href="#Lean" class="headerlink" title="Lean"></a>Lean</h2><p>This term was originally developed by <code>Toyota Motor Corporation</code> in the mid-20th century as a production and management philosophy aimed at improving production efficiency, reducing waste, enhancing quality, and fostering continuous improvement. This approach became known as the <code>Toyota Production System</code> (TPS), which emphasises the elimination of all forms of waste—such as time, materials, and labour and optimising processes.</p>
<p>Over time, Lean thinking has been widely adopted in various industries beyond manufacturing, including software development and services, leading to the emergence of concepts such as ‘Lean Production’ and ‘Lean Management’ in these fields.</p>
<p><code>JIT</code>: Just In Time.</p>
<h3 id="2-essential-concepts"><a href="#2-essential-concepts" class="headerlink" title="2 essential concepts"></a>2 essential concepts</h3><ul>
<li><p><code>Value</code></p>
<p>Anything that customers are prepared to pay for can be regarded as value, because it directly contributes to fulfilling their needs or solving their problems.<br>Simply to say, <code>value = customer&#39;s perspective</code>.</p>
</li>
<li><p><code>Waste</code></p>
<p>Anything that does not contribute to value can be classified as waste.</p>
<p>There are <code>8 waste in total</code>. The abbreviation of these 8 words is <code>DOWNTIME</code>.</p>
<ul>
<li><p><code>Defects</code></p>
<p>Products or services that do not meet quality standards and require rework or scrap.</p>
</li>
<li><p><code>Overproduction</code></p>
<p>Producing more than what is needed or before it is needed.</p>
</li>
<li><p><code>Waiting</code></p>
<p>Idle time where work is not being done, such as waiting for materials, information, or equipment.</p>
</li>
<li><p><code>Non-utilized Talents</code></p>
<p>Employees’ full potential, skills, and ideas are not fully utilised in the organisation’s processes or decision-making.</p>
</li>
<li><p><code>Transportation</code></p>
<p>Unnecessary movement of products, materials.</p>
</li>
<li><p><code>Inventory</code></p>
<p>Excess materials or products that are not being used immediately.</p>
</li>
<li><p><code>Motion</code></p>
<p>Unnecessary movement of people, tools, or equipment that does not add value.</p>
</li>
<li><p><code>Extra Processing</code></p>
<p>Doing more work than required or using more complex processes than necessary.</p>
</li>
</ul>
</li>
</ul>
<h3 id="Pull-vs-Push"><a href="#Pull-vs-Push" class="headerlink" title="Pull vs Push"></a>Pull vs Push</h3><ul>
<li><p><code>Pull</code></p>
<p>Developers independently pull tasks&#x2F;user stories from the Product Backlog to Sprint Backlog’s TODO list only if they completed the tasks&#x2F;user stories at hand.</p>
<p>One task&#x2F;user story at a time.</p>
</li>
<li><p><code>Push</code></p>
<p>Developers are passively receiving tasks&#x2F;user stories from the manager.</p>
<p>More than one at hand at a time. It may cause the 7 kindks of waste except for <code>Motion</code>.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Management</category>
      </categories>
      <tags>
        <tag>Scrum</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Series (Chapter 1): Building and using images</title>
    <url>//Cloud/Docker/Building-and-using-images/index.html</url>
    <content><![CDATA[<h2 id="Overview-of-the-image"><a href="#Overview-of-the-image" class="headerlink" title="Overview of the image"></a>Overview of the image</h2><p>An image is a <code>read-only template</code> used to <code>create containers</code>. Typically, it includes some additional customizations.</p>
<p>For example, we could build an image based on rocky operating system that directly includes some applications like Nginx, Apache or other programs during the image build process.</p>
<p>Once the image is built, we could directly launch containers based on it to quickly achieve the desired business functionality to ensure consistent behavior across different environments.</p>
<h2 id="Sources-of-the-image"><a href="#Sources-of-the-image" class="headerlink" title="Sources of the image"></a>Sources of the image</h2><ul>
<li><p>Pull from the image repository(public:Docker Hub&#x2F;private: harbor,quay,etc)</p>
<ul>
<li><a href="https://hub.docker.com/">Public image repository</a></li>
<li><a href="https://github.com/goharbor/harbor">Private image repository</a></li>
</ul>
<p><code>Registry</code> is a <strong>stateless</strong>, highly <strong>scalable</strong> service that allows us to store and distribute images. Registry is an open source service licensed under the Apache License.</p>
<p>The public image repository is a cloud-based registry service.</p>
<p>Compared with the public image repository, the private repository has these merits:</p>
<ul>
<li>We could strictly control where images are stored.</li>
<li>We have a mirror distribution channel that belongs entirely to us.</li>
<li>We could tightly integrate image storage and distribution into internal development workflows.</li>
</ul>
</li>
<li><p>Customize and build manually from Dockerfile</p>
</li>
</ul>
<h2 id="Build-images-manually"><a href="#Build-images-manually" class="headerlink" title="Build images manually"></a>Build images manually</h2><p>There are two methods to build image.</p>
<ul>
<li><code>docker commit</code> based on original containers</li>
</ul>
<p>We could modify the applications&#x2F;services&#x2F;environments and something else based on the original dokcer image in the containers. After that, we could use <code>docker commit</code> command to export a new image from containers.</p>
<ul>
<li><code>docker build</code> by using Dockerfile</li>
</ul>
<p>Build the image you need from scratch. At the beginning of creating the image, set the various settings and requirements you need.<br>Various applications are included, and the generated images can be directly used for business deployment.</p>
<p>Dockerfile high frequency instruction set</p>
<table>
<thead>
<tr>
<th align="center">Command</th>
<th align="center">Function</th>
<th align="center">Format</th>
</tr>
</thead>
<tbody><tr>
<td align="center">FROM</td>
<td align="center">Specify the base image</td>
<td align="center">FROM image:tag</td>
</tr>
<tr>
<td align="center">MAINTAINER</td>
<td align="center">Specify the image author</td>
<td align="center">MAINTAINER name</td>
</tr>
<tr>
<td align="center">RUN</td>
<td align="center">Excute the Specified command</td>
<td align="center">RUN command</td>
</tr>
<tr>
<td align="center">ADD</td>
<td align="center">Copy files from build context copied into mirror</td>
<td align="center">ADD [–chown&#x3D;user:group]src…dest</td>
</tr>
<tr>
<td align="center">COPY</td>
<td align="center">Copy files from build context copied into mirror</td>
<td align="center">COPY -chown&#x3D;user:groupsrc…dest</td>
</tr>
<tr>
<td align="center">ENV</td>
<td align="center">Set the environmental variables</td>
<td align="center">ENV key value</td>
</tr>
<tr>
<td align="center">EXPOSE</td>
<td align="center">Specify the listen port for applications</td>
<td align="center">EXPOSE port [port&#x2F;protocol]</td>
</tr>
<tr>
<td align="center">USER</td>
<td align="center">Specify the user at boot</td>
<td align="center">USER user</td>
</tr>
<tr>
<td align="center">CMD</td>
<td align="center">Specify the command or scripts at boot</td>
<td align="center">CMD command param1 param2</td>
</tr>
<tr>
<td align="center">ENTRYPOINT</td>
<td align="center">Specify an excutable script or program path</td>
<td align="center">ENTRYPOINT command param1 param2</td>
</tr>
<tr>
<td align="center">VOLUME</td>
<td align="center">Declare files or directories as volume and mount to containers</td>
<td align="center">VOLUME [“&#x2F;data”]</td>
</tr>
<tr>
<td align="center">WORKDIR</td>
<td align="center">Specify the current working directory</td>
<td align="center">WORKDIR &#x2F;path&#x2F;to&#x2F;workdir</td>
</tr>
</tbody></table>
<p>You could use all Dockerfile commands to develop the Dockerfile.</p>
<p>After coding, you should use this command to build an image.</p>
<p>The default name of dockerfile is <code>Dockerfile</code>, you could name it as what you want. However, you should specify the file name when you build an image.</p>
<p>The dot represents the context, you also could specify the path as what you want here.</p>
<p>If you do not specify the tag name, the default name of tag is <code>latest</code>. So, please do not misunderstand and remember to set the appropriate name for easily understand!</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build (-f Dockerfile_name) -t image_name:tag_name .(/path/to/context)</span><br></pre></td></tr></table></figure>

<h2 id="Using-an-image-to-create-containers"><a href="#Using-an-image-to-create-containers" class="headerlink" title="Using an image to create containers"></a>Using an image to create containers</h2><p>There are two methods to create containers.</p>
<ul>
<li><code>docker run</code></li>
</ul>
<p>This command can only start one container at a time.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8000:80 customized_image:v1</span><br></pre></td></tr></table></figure>

<ul>
<li><code>docker compose up -d</code></li>
</ul>
<p><span style="color:red;">You must develop a docker-compose.yaml file first, and then change the directory to it. By the way, a container that remain running only if it has a process that sustains its execution.</span></p>
<p><code>docker-compose.yaml</code> is an inventory listing all needed services, it is so convenient that you could start more than one container at a time.</p>
<h3 id="Creating-the-docker-compose-yaml-file"><a href="#Creating-the-docker-compose-yaml-file" class="headerlink" title="Creating the docker-compose.yaml file"></a>Creating the docker-compose.yaml file</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># change the directory into the docker-compose file</span></span><br><span class="line"><span class="built_in">cd</span> ~/docker</span><br><span class="line"><span class="comment"># create docker-compose.yml file</span></span><br><span class="line">vim docker-compose.yaml</span><br><span class="line"><span class="comment"># specify Docker Compose file version as 3.8</span></span><br><span class="line">version: <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="comment"># Define services，for example: &quot;build&quot;</span></span><br><span class="line">services:</span><br><span class="line">build:</span><br><span class="line"><span class="comment"># specify the based on what image to build</span></span><br><span class="line">image: nginx:latest</span><br><span class="line"><span class="comment"># specify the container name as build</span></span><br><span class="line">container_name: build</span><br><span class="line"><span class="comment"># Start the tty console terminal for interacting</span></span><br><span class="line"><span class="built_in">tty</span>: <span class="literal">true</span></span><br><span class="line"><span class="comment"># specify auto-restart when container crashed</span></span><br><span class="line">restart: always</span><br><span class="line"><span class="comment"># configure the volumes to mount into containers</span></span><br><span class="line">volumes:</span><br><span class="line">- ./src/:/root/nginx/</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Cloud</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>2025/01/24 English accumulation</title>
    <url>//Language/English/20250124/index.html</url>
    <content><![CDATA[<ul>
<li><p><strong>and so forth</strong>: It is used to mean <code>and other similar things</code> or <code>and so on</code>. It’s a way of indicating that the list or examples given could continue, but you’re leaving out additional details because they’re understood to follow the same pattern. It is more formal than <code>etc.</code></p>
</li>
<li><p><strong>oversight</strong>: It generally refers to <code>supervision</code> or <code>monitoring</code> of a process, activity, or organization to ensure that it is functioning properly, ethically, and in compliance with regulations or standards.</p>
</li>
<li><p><strong>manifesto</strong>: It is a public declaration of principles, beliefs, or intentions, often issued by a political party, organization, or individual. A manifesto is typically a formal and structured statement that conveys the direction or ideology behind a movement, election campaign, or cause.</p>
</li>
<li><p><strong>retrieve</strong>: It means to <code>get something back</code> or <code>bring something back</code> from a particular place, especially after it has been lost, misplaced, or taken away. It can refer to physically <code>fetching</code> or <code>recovering</code> an item, or to accessing and recovering information.</p>
</li>
<li><p><strong>viable</strong>: It refers to something that is <code>practical</code>, <code>feasible</code>, or <code>capable of working successfully</code>. It is used to describe a plan, idea, solution, or course of action that is likely to be successful or achievable, given the available resources, constraints, and conditions.</p>
</li>
<li><p><strong>adversarial</strong>: It describes a situation, relationship, or environment where there is <code>opposition</code>, <code>conflict</code>, or <code>competition</code> between two parties or groups. It often implies a hostile, competitive, or antagonistic nature, where one side’s success or position is seen as being in direct conflict with the other’s.</p>
</li>
<li><p><strong>hostile</strong>: It refers to an attitude, environment, or action that is <code>unfriendly</code>, <code>aggressive</code>, or <code>antagonistic</code>. It describes behaviour or conditions that reflect opposition, enmity, or a desire to cause harm or discomfort to someone or something.</p>
</li>
<li><p><strong>antagonistic</strong>: It describes someone or something that is opposed, hostile, or actively unfriendly. It refers to actions, attitudes, or behaviours that create or reflect conflict, opposition, or rivalry. An antagonistic person or force is one that creates tension or hostility, often in a deliberate way.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Language</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>Scrum Guide (Part1 of 2)</title>
    <url>//Management/Scrum/Scrum-Guide1/index.html</url>
    <content><![CDATA[<h2 id="Icebreaking-topics"><a href="#Icebreaking-topics" class="headerlink" title="Icebreaking topics"></a>Icebreaking topics</h2><p>The evolution of agile management indeed shows how it has expanded and gained popularity across various industries over time.</p>
<p>Here’s an analysis of agile management from the perspective of being a product of “involution” in China:</p>
<table>
<thead>
<tr>
<th align="center">2000</th>
<th align="center">2005</th>
<th align="center">2010</th>
<th align="center">2015</th>
<th align="center">2020</th>
</tr>
</thead>
<tbody><tr>
<td align="center">IT TELECOM(internet 2G)</td>
<td align="center">GAMING(intranet 3G)</td>
<td align="center">INTERNET(mobile internet 4G)</td>
<td align="center">BANKING(Alibaba)</td>
<td align="center">PHARMACY(COVID-19) FMCG(Tik Tok) AutoMobile(Tesla)</td>
</tr>
</tbody></table>
<ul>
<li><p><code>2000: IT and Telecommunications Industry</code></p>
<p>The origin of agile management can be traced back to the release of the Agile Manifesto in 2001. At that time, the IT and telecommunications industries were facing rapid technological changes and uncertain market demands. The traditional waterfall development model struggled to adapt. This led to the emergence of agile methods, such as Scrum and Extreme Programming (XP), aimed at improving development efficiency and adaptability.</p>
</li>
<li><p><code>2005: Gaming Industry</code></p>
<p>The gaming industry’s demand for innovation and rapid iteration made agile methods a major trend. In game development, fast prototyping, quick incorporation of user feedback, and cross-department collaboration became critical. Agile methods helped teams manage complexity and shorten product development cycles.</p>
</li>
<li><p><code>2010: Internet Industry</code></p>
<p>The explosive growth of the internet industry brought about fierce market competition. User experience, rapid product releases, and continuous iteration became key to survival. Agile management became the standard for internet companies, enabling small, incremental progress and frequent delivery to enhance user satisfaction and market responsiveness.</p>
</li>
<li><p><code>2015: Banking and Financial Industry</code></p>
<p>Amid the wave of digital transformation, traditional financial institutions began to feel the competitive pressure from tech companies. To accelerate product development and adapt to regulatory changes, banks and financial organizations started adopting agile management methods, establishing innovation labs and implementing agile team collaboration to improve competitiveness.</p>
</li>
<li><p><code>2020: Pharmaceutical Industries</code></p>
<p>The COVID-19 pandemic further drove the adoption of agile practices, especially in vaccine development and drug production, where rapid trials, real-time feedback, and cross-team collaboration became crucial.</p>
</li>
</ul>
<p>Therefore, businesses transitioning to agile practices is not without reason. It is a means of surviving the pressures and challenges brought about by industry-wide “involution.” Survival of the fittest, as nature dictates, follows the law of natural selection.</p>
<hr>
<h2 id="Agile"><a href="#Agile" class="headerlink" title="Agile"></a>Agile</h2><h3 id="What-is-Agile"><a href="#What-is-Agile" class="headerlink" title="What is Agile?"></a>What is Agile?</h3><p><code>Agile</code> is essentially a mindset, a philosophy for responding flexibly to rapid changes, complexity, and uncertainty.</p>
<h3 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h3><p>It includes various kind of methods: Kanban, Extreme Programming(XP), BDD, Scrum and so forth.</p>
<h3 id="4-Values"><a href="#4-Values" class="headerlink" title="4 Values"></a>4 Values</h3><ul>
<li><p><code>Individuals and interactions over processes and tools</code></p>
<p>Our processes and tools should provide services for developers, for people. Effective processes and useful tools should provide convenience for our work.</p>
<p>Effectiveness-oriented processes&#x2F;tools, rather than oversight-oriented processes&#x2F;tools. Please learn more in <a href="#taylorism">Taylorism</a>.</p>
</li>
<li><p><code>Working software over comprehensive documentation</code></p>
<p>The best design documentation is actually the test cases.</p>
<p>Substance over form, code over text.</p>
</li>
<li><p><code>Customer collaboration over contract negotiation</code></p>
<p>We should strive for win-win cooperation, not adversarial negotiation.</p>
<p>Let the other party make money first, and then we can make money.</p>
</li>
<li><p><code>Responding to change over following a plan</code></p>
<p>We prefer plans in the form of actions (verbs) rather than in the form of nouns.</p>
<p>Nothing is set in stone; the only constant is change.</p>
</li>
</ul>
<h3 id="12-Principles"><a href="#12-Principles" class="headerlink" title="12 Principles"></a>12 Principles</h3><p>More detailed infomation, please follow the <a href="https://agilemanifesto.org/principles.html">agilemanifesto</a>.</p>
<h3 id="Taylorism"><a href="#Taylorism" class="headerlink" title="Taylorism"></a>Taylorism</h3><p>It is so ridiculous to treat people as resources.</p>
<p>The management in the IT and construction industries is lagging because both have been modeled after the management practices of the manufacturing industry.</p>
<p>In 1890, Taylorism gave birth to terms like ‘bean counters,’ ‘minute men,’ ‘blue-collar workers,’ and ‘time sheets,’ all of which are associated with oversight-oriented practice. This only leads to the so-called power struggles and conflict between managers and workers.</p>
<hr>
<h2 id="Scrum"><a href="#Scrum" class="headerlink" title="Scrum"></a>Scrum</h2><p>Having introduced Agile, I will now focus on the Scrum methodology.</p>
<h3 id="What-is-Scrum"><a href="#What-is-Scrum" class="headerlink" title="What is Scrum?"></a>What is Scrum?</h3><p><code>Scrum</code> originates from <code>rugby</code>.</p>
<p><strong>Business Perspective: Quickly and continuously turning innovation into value.</strong></p>
<p><strong>Managerial Perspective: Creating the maximum value with limited time and cost.</strong></p>
<h3 id="3-Core-Practices"><a href="#3-Core-Practices" class="headerlink" title="3 Core Practices"></a>3 Core Practices</h3><ul>
<li><p><code>Value Prioritisation</code></p>
<p>Prioritising tasks based on the commercial value of the product.</p>
</li>
<li><p><code>Parallel Processes</code></p>
<p>Bottlenecks and delays in a single process are addressed.</p>
</li>
<li><p><code>Superteam</code></p>
<p>Eliminate collaboration dependencies and reduce waste of unused skills.</p>
</li>
</ul>
<h3 id="Differences-between-Scrum-and-Waterfall"><a href="#Differences-between-Scrum-and-Waterfall" class="headerlink" title="Differences between Scrum and Waterfall"></a>Differences between Scrum and Waterfall</h3><p>The Project Management Triangle: Scope, Time, and Cost, all work together in a balanced way to impact quality.</p>
<ul>
<li><p><code>Scope</code></p>
</li>
<li><p><code>Time</code></p>
</li>
<li><p><code>cost</code></p>
</li>
<li><p><code>Quality</code></p>
</li>
</ul>
<p>Different management approaches handle problems in different ways.</p>
<ul>
<li><p><code>Waterfall</code></p>
<p>Fixed scope, compressed cost.</p>
</li>
<li><p><code>Scrum</code></p>
<p>Maximize value with fixed cost.</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> Prioritize doing the tasks that create the most value.</li>
<li><input disabled="" type="checkbox"> Expanding the project scope while keeping the cost unchanged puts pressure on the team.</li>
</ul>
</li>
</ul>
<hr>
<p>That’s all I would like to introduce in this article.</p>
<p>More sharing about Scrum, please stay tuned for updates about <a href="https://blog.sunhaoyang.net/Management/Scrum/Scrum-Guide2/index.html">Scrum Guide (Part2 of 2)</a>.</p>
]]></content>
      <categories>
        <category>Management</category>
      </categories>
      <tags>
        <tag>Scrum</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Series (Chapter 0): Installing docker-engine in Ubuntu</title>
    <url>//Cloud/Docker/Installing-docker-engine-in-Ubuntu/index.html</url>
    <content><![CDATA[<h2 id="What-is-Docker"><a href="#What-is-Docker" class="headerlink" title="What is Docker?"></a>What is Docker?</h2><p>The name <code>Docker</code> is derived from the term used in maritime shipping, referring to <code>dockworkers</code>. It serves as a metaphorical representation.</p>
<p>In traditional shipping, goods are packed into standardized containers, enabling seamless transfer across different modes of transportation, such as trucks, trains, and ships. Similarly, Docker provides a <code>standardized container</code> that packages applications and all their dependencies together, allowing them to run efficiently and reliably across different environments, such as development, testing, and production. Docker is just one of the most commmon technical tools in the area of containerization. What’s more, such as: Podman, CRI-O, Containerd are also useful containerization tools.</p>
<p>Containerization leverages Linux container technologies such as LXC and cgroups to provide a lightweight method for running applications in isolation. Container looks like a box including all dependencies files or applications, developers only need to develop in this environment. After developing, they could delivery programs&#x2F;projects to operation teams by image directly. This method avoid the confliction between development &amp; production environment due to configuration differences or dependency conflicts.</p>
<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><h3 id="Firewall"><a href="#Firewall" class="headerlink" title="Firewall"></a>Firewall</h3><blockquote>
<p>Docker is only compatible with <code>iptables-nft</code> and <code>iptables-legacy</code>. Firewall rules created with <code>nft</code> are not supported on a system with Docker installed. Make sure that any firewall rulesets you use are created with <code>iptables</code> or <code>ip6tables</code>, and that you add them to the <code>DOCKER-USER</code> chain.</p>
</blockquote>
<h3 id="Operating-system"><a href="#Operating-system" class="headerlink" title="Operating system"></a>Operating system</h3><ul>
<li><p>Ubuntu Oracular 24.10</p>
</li>
<li><p>Ubuntu Noble 24.04 (LTS)</p>
</li>
<li><p>Ubuntu Jammy 22.04 (LTS)</p>
</li>
<li><p>Ubuntu Focal 20.04 (LTS)</p>
</li>
</ul>
<blockquote>
<p>Docker Engine for Ubuntu is compatible with x86_64 (or amd64), armhf, arm64, s390x, and ppc64le (ppc64el) architectures.</p>
</blockquote>
<h2 id="Installing-docker-engine"><a href="#Installing-docker-engine" class="headerlink" title="Installing docker-engine"></a>Installing docker-engine</h2><p>I followed the <a href="https://docs.docker.com/engine/install/ubuntu/">Docker official website</a> for the installation.</p>
<h3 id="Uninstalling-the-old-version"><a href="#Uninstalling-the-old-version" class="headerlink" title="Uninstalling the old version"></a>Uninstalling the old version</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> pkg <span class="keyword">in</span> docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; <span class="keyword">do</span> <span class="built_in">sudo</span> apt-get remove <span class="variable">$pkg</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h3 id="Installing-by-using-apt-repository"><a href="#Installing-by-using-apt-repository" class="headerlink" title="Installing by using apt repository"></a>Installing by using <code>apt</code> repository</h3><p>There are many various methods to install docker-engine, I will use the recommended method to install here.</p>
<h4 id="Setting-up-Docker’s-apt-repository"><a href="#Setting-up-Docker’s-apt-repository" class="headerlink" title="Setting up Docker’s apt repository"></a>Setting up Docker’s apt repository</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add Docker&#x27;s official GPG key:</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install ca-certificates curl</span><br><span class="line"><span class="built_in">sudo</span> install -m 0755 -d /etc/apt/keyrings</span><br><span class="line"><span class="built_in">sudo</span> curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> a+r /etc/apt/keyrings/docker.asc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add the repository to Apt sources:</span></span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="subst">$(. /etc/os-release &amp;&amp; echo <span class="string">&quot;<span class="variable">$VERSION_CODENAME</span>&quot;</span>)</span> stable&quot;</span> | \</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br></pre></td></tr></table></figure>

<h4 id="Installing-the-latest-version"><a href="#Installing-the-latest-version" class="headerlink" title="Installing the latest version"></a>Installing the latest version</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>

<h3 id="Setting-auto-start-automatically-at-boot-and-take-effect-immediately"><a href="#Setting-auto-start-automatically-at-boot-and-take-effect-immediately" class="headerlink" title="Setting auto-start automatically at boot and take effect immediately"></a>Setting auto-start automatically at boot and take effect immediately</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> docker.service</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> containerd.service</span><br></pre></td></tr></table></figure>

<h3 id="Confirming-the-installation-result"><a href="#Confirming-the-installation-result" class="headerlink" title="Confirming the installation result"></a>Confirming the installation result</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> docker run hello-world</span><br></pre></td></tr></table></figure>

<p>If you install the docker-engine successfully, there is a sentence to inform and congratulate to you.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:~$ sudo docker run hello-world</span><br><span class="line">Unable to find image &#x27;hello-world:latest&#x27; locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">e6590344b1a5: Pull complete</span><br><span class="line">Digest: sha256:d715f14f9eca81473d9112df50457893aa4d099adeb4729f679006bf5ea12407</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>And then, you could find the image called <code>hello-world</code> in the image list.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:~$ sudo docker images</span><br><span class="line">REPOSITORY                                                                                               TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">hello-world                                                                                              latest    74cc54e27dc4   32 hours ago    10.1kB</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<h3 id="Granting-regular-users-access-to-the-docker-engine"><a href="#Granting-regular-users-access-to-the-docker-engine" class="headerlink" title="Granting regular users access to the docker-engine"></a>Granting regular users access to the docker-engine</h3><p>You must receive errors when trying to run without root. The reason is that the docker user group exists but contains no users, which is why you’re required to use sudo to run Docker commands.</p>
<p>The Docker daemon binds to a Unix socket, not a TCP port. By default it’s the root user that owns the Unix socket, and other users can only access it using sudo. The Docker daemon always runs as the root user.</p>
<h4 id="Creating-the-docker-group-and-add-your-user"><a href="#Creating-the-docker-group-and-add-your-user" class="headerlink" title="Creating the docker group and add your user"></a>Creating the docker group and add your user</h4><p>Sometimes, you could skip this step because the docker group has already been created.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> groupadd docker</span><br></pre></td></tr></table></figure>

<h4 id="Adding-your-user-to-the-docker-group"><a href="#Adding-your-user-to-the-docker-group" class="headerlink" title="Adding your user to the docker group"></a>Adding your user to the docker group</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure>

<h4 id="Restarting"><a href="#Restarting" class="headerlink" title="Restarting"></a>Restarting</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h3 id="Confirming-without-root-privilege"><a href="#Confirming-without-root-privilege" class="headerlink" title="Confirming without root privilege"></a>Confirming without root privilege</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shy@flash-shy:~$ docker images</span><br><span class="line">REPOSITORY                                                                                               TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">hello-world                                                                                              latest    74cc54e27dc4   32 hours ago    10.1kB</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>Congratulations to you! Up to now, you installed docker-engine successfully!</p>
]]></content>
      <categories>
        <category>Cloud</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>2025/01/23 English accumulation</title>
    <url>//Language/English/20250123/index.html</url>
    <content><![CDATA[<ul>
<li><p><strong>utilize</strong>: It means to make practical or effective use of something. It often conveys a slightly more formal tone compared to “use.” Utilize is typically reserved for professional, academic, or technical contexts, whereas “use” is more versatile and widely applicable in casual settings.</p>
</li>
<li><p><strong>okra</strong>: Okra is a green, pod-shaped vegetable that is commonly used in cooking, particularly in dishes from South Asia, Africa, and the Caribbean. It is sometimes referred to as “ladies’ fingers” because of its slender shape.</p>
</li>
<li><p><strong>cephalopods</strong>: It is a type of marine animal belonging to the mollusc family, characterized by bilateral body symmetry, a prominent head, and a set of tentacles or arms. Common examples of cephalopods include octopuses, squids, cuttlefish, and nautiluses. Cephalopods are fascinating and highly adaptable creatures of the sea, admired for their complex behaviors and unique physiology.</p>
</li>
<li><p><strong>prerequisites</strong>: Prerequisites refer to the essential requirements or conditions that must be met before something else can happen or be achieved. prerequisites is a formal word than “requirement”.</p>
</li>
<li><p><strong>anchor</strong>: A heavy object, usually made of metal, attached to a ship or boat by a cable or chain and dropped into the water to keep the vessel in place.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Language</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>Ceph Series (Chapter 0): Deploying the ceph cluster by cephadm</title>
    <url>//Cloud/Ceph/Deploying-the-ceph-cluster-by-cephadm/index.html</url>
    <content><![CDATA[<h2 id="What-is-Ceph"><a href="#What-is-Ceph" class="headerlink" title="What is Ceph?"></a>What is Ceph?</h2><p>At first, the phonetic transcription of ‘Ceph’ is &#x2F;sɛf&#x2F;. The name ‘Ceph’ comes from ‘cephalopod,’ which refers to marine animals such as octopuses and squids. </p>
<p>Similarly, Ceph, as an open-source distributed storage system, has garnered widespread attention and application due to its high scalability, reliability, and performance. </p>
<p>Ceph supports multiple storage interfaces such as <strong><code>object storage</code></strong>, <strong><code>block storage</code></strong>, and <strong><code>file system storage</code></strong>, meeting the storage needs in various business scenarios.</p>
<p>This article will provide a detailed guide on how to deploy a Ceph distributed storage cluster from scratch using containerization on the Rocky 9.5 operating system. Through this guide, you will be able to master the installation, configuration, and management of Ceph.</p>
<p>Replacing ceph-ansible, through containerization, <code>cephadm</code> provides a standardized approach to operate Ceph clusters, effectively reducing operational complexity.</p>
<hr>
<h2 id="Deployment-Plan-Table"><a href="#Deployment-Plan-Table" class="headerlink" title="Deployment Plan Table"></a>Deployment Plan Table</h2><p>Most readers are encountering Ceph for the first time. To make it clearer and more intuitive, I have created the following deployment plan table to help you deploy the ceph cluster in VMware virtual environment.</p>
<table>
<thead>
<tr>
<th align="center">Number</th>
<th align="center">Operating System</th>
<th align="center">Ceph Version</th>
<th align="center">Role</th>
<th align="center">IP</th>
<th align="center">Configuration</th>
<th align="center">Hostname</th>
</tr>
</thead>
<tbody><tr>
<td align="center">001</td>
<td align="center">Rocky9.5(x86_64)</td>
<td align="center">squid (latest 19.2.0)</td>
<td align="center">bootstrap，mon，mgr，osd</td>
<td align="center">172.16.173.129</td>
<td align="center">core(s):4, memeory:4G, disk: 500G*4</td>
<td align="center">ceph001.haoyang.cn</td>
</tr>
<tr>
<td align="center">002</td>
<td align="center">Rocky9.5(x86_64)</td>
<td align="center">squid (latest 19.2.0)</td>
<td align="center">mon，mgr，osd</td>
<td align="center">172.16.173.130</td>
<td align="center">core(s):4, memeory:4G, disk: 500G*4</td>
<td align="center">ceph002.haoyang.cn</td>
</tr>
<tr>
<td align="center">003</td>
<td align="center">Rocky9.5(x86_64)</td>
<td align="center">squid (latest 19.2.0)</td>
<td align="center">mon，mgr，osd</td>
<td align="center">172.16.173.131</td>
<td align="center">core(s):4, memeory:4G, disk: 500G*4</td>
<td align="center">ceph003.haoyang.cn</td>
</tr>
</tbody></table>
<ul>
<li><p>Because you will deploy the ceph cluster in VMware, you need to download the x86_64 structure iso image from <strong><a href="https://download.rockylinux.org/pub/rocky/9/isos/x86_64/Rocky-9.5-x86_64-minimal.iso">Rocky Linux Official Website</a></strong> to install the Rocky9.5 operating system as the base. I used the minimal version to install rocky, so you could not copy&#x2F;paste from your desktop to rocky. You’d better use <strong>ssh command</strong> to login in Rocky Linux remotely.</p>
</li>
<li><p>More information about the Ceph Release Version, please visit the <strong><a href ="https://docs.ceph.com/en/latest/releases/">Official Website</a></strong>.</p>
</li>
<li><p>More detailed information about the Role, for example: “What’s the meaning of mon&#x2F;mgr&#x2F;osd?” or “What do these words stand for?” .etc, please visit my another blog: <strong><a href="https://blog.sunhaoyang.net/Cloud/Ceph/Introducing-Red-Hat-Ceph-Storage-Architecture/index.html">Ceph Series (Chapter 1):Introducing Red Hat Ceph Storage Architecture</a></strong>. </p>
</li>
<li><p>From the aspect of IP address, I just set the network adaptor to NAT mode and I used the default subnet IP as well as the default generated IP address here. It doesn’t matter if you’d like to modify the subnet IP as what you want, and you may get another random IP address finally. As long as these three virtual machines can communicate with each other, that’s enough.</p>
</li>
<li><p>According to the performance of your hardware, I recommend you to set 4C&#x2F;4G&#x2F;500G*4 here. Don’t worry about disk space issues because of the <strong><code>Thin Provisioning Mechanism</code></strong>. When creating virtual disks, only the space for the actual data used is allocated. The total capacity declared by the virtual disk is just a logical value, and the actual storage space is dynamically allocated as the data grows.</p>
</li>
<li><p>As for the hostname, it’s fine as long as it’s simple and easy to understand. You can name it however you like. I used my Chinese name to represent the hostname here.</p>
</li>
</ul>
<hr>
<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><p><span style="color: red;">Please note that, unless specified，otherwise, the following prerequisites must be completed on all nodes.</span></p>
<h3 id="Setting-the-specified-hostname"><a href="#Setting-the-specified-hostname" class="headerlink" title="Setting the specified hostname"></a>Setting the specified hostname</h3><p>Set an appropriate hostname on each node for resolution.</p>
<p>Take the first node, 001, as an example here.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl hostname ceph001.haoyang.cn</span><br></pre></td></tr></table></figure>

<h3 id="Setting-the-resolution-between-the-cluster"><a href="#Setting-the-resolution-between-the-cluster" class="headerlink" title="Setting the resolution between the cluster"></a>Setting the resolution between the cluster</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/hosts &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">172.16.173.129 ceph001.haoyang.cn ceph001</span><br><span class="line">172.16.173.130 ceph002.haoyang.cn ceph002</span><br><span class="line">172.16.173.131 ceph003.haoyang.cn ceph003</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h3 id="Configuring-the-dnf-software-repository"><a href="#Configuring-the-dnf-software-repository" class="headerlink" title="Configuring the dnf software repository"></a>Configuring the dnf software repository</h3><p>I provided two configurations here.</p>
<blockquote>
<p>The repository provided by Ceph’s official site.</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/ceph.repo &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[ceph]</span><br><span class="line">name=Ceph packages <span class="keyword">for</span> x86_64</span><br><span class="line">baseurl=https://download.ceph.com/rpm-squid/el9/x86_64</span><br><span class="line">enabled=1</span><br><span class="line">priority=2</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.ceph.com/keys/release.asc</span><br><span class="line"></span><br><span class="line">[ceph-noarch]</span><br><span class="line">name=Ceph noarch packages</span><br><span class="line">baseurl=https://download.ceph.com/rpm-squid/el9/noarch</span><br><span class="line">enabled=1</span><br><span class="line">priority=2</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.ceph.com/keys/release.asc</span><br><span class="line"></span><br><span class="line">[ceph-source]</span><br><span class="line">name=Ceph <span class="built_in">source</span> packages</span><br><span class="line">baseurl=https://download.ceph.com/rpm-squid/el9/SRPMS</span><br><span class="line">enabled=0</span><br><span class="line">priority=2</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.ceph.com/keys/release.asc</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Using Nanjing University for repository acceleration.</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/ceph.repo &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[ceph]</span><br><span class="line">name=Ceph packages <span class="keyword">for</span> x86_64</span><br><span class="line">baseurl=https://mirrors.nju.edu.cn/ceph/rpm-squid/el9/x86_64</span><br><span class="line">enabled=1</span><br><span class="line">priority=2</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.nju.edu.cn/ceph/keys/release.asc</span><br><span class="line"></span><br><span class="line">[ceph-noarch]</span><br><span class="line">name=Ceph noarch packages</span><br><span class="line">baseurl=https://mirrors.nju.edu.cn/ceph/rpm-squid/el9/noarch</span><br><span class="line">enabled=1</span><br><span class="line">priority=2</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.nju.edu.cn/ceph/keys/release.asc</span><br><span class="line"></span><br><span class="line">[ceph-source]</span><br><span class="line">name=Ceph <span class="built_in">source</span> packages</span><br><span class="line">baseurl=https://mirrors.nju.edu.cn/ceph/rpm-squid/el9/SRPMS</span><br><span class="line">enabled=0</span><br><span class="line">priority=2</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.nju.edu.cn/ceph/keys/release.asc</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h3 id="Updating-and-generating-the-cache-for-the-dnf-package-manager"><a href="#Updating-and-generating-the-cache-for-the-dnf-package-manager" class="headerlink" title="Updating and generating the cache for the dnf package manager"></a>Updating and generating the cache for the dnf package manager</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf makecache</span><br></pre></td></tr></table></figure>

<h3 id="Installing-the-necessary-software-packages"><a href="#Installing-the-necessary-software-packages" class="headerlink" title="Installing the necessary software packages"></a>Installing the necessary software packages</h3><ul>
<li>Python 3</li>
<li>Systemd</li>
<li>Podman</li>
<li>Chrony</li>
<li>LVM2</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf install podman chrony lvm2 systemd python3 bash-completion wget curl epel-release -y</span><br></pre></td></tr></table></figure>

<p>It may update critical components like systemd, so please <strong><code>restart</code></strong> the server after the installation.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h3 id="Enabling-NTP-synchronization"><a href="#Enabling-NTP-synchronization" class="headerlink" title="Enabling NTP synchronization"></a>Enabling NTP synchronization</h3><p>By default, it syncs from public network sources, but you can specify your own time source. Here, I use <em><strong>ntp.aliyun.com</strong></em>.</p>
<p>Edit the configuration file and add the following line <code>pool ntp.aliyun.com iburst</code> at the very beginning.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/chrony.conf</span><br><span class="line"><span class="comment"># Use public servers from the pool.ntp.org project.</span></span><br><span class="line"><span class="comment"># Please consider joining the pool (https://www.pool.ntp.org/join.html).</span></span><br><span class="line">pool ntp.aliyun.com iburst</span><br><span class="line">pool 2.rocky.pool.ntp.org iburst</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>After editing the <code>/etc/chrony.conf</code> file, please set the <code>chronyd.service</code> to start automatically at boot and take effect immediately.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> chronyd --now</span><br><span class="line">systemctl restart chronyd</span><br></pre></td></tr></table></figure>

<h3 id="Installing-cephadm"><a href="#Installing-cephadm" class="headerlink" title="Installing cephadm"></a>Installing cephadm</h3><p>Installing the cephadm tool is sufficient, but I also install the <code>ceph-common</code> package to execute various Ceph commands like ceph and rados directly on the host. Since Ceph is deployed in a containerized manner with cephadm, these commands are not available on the host by default. By installing <code>ceph-common</code>, you can avoid logging into the container each time, making it more efficient.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf install cephadm ceph-common -y</span><br></pre></td></tr></table></figure>

<p>Up to this point, all prerequisites have been completed.</p>
<hr>
<h2 id="Deploying-a-new-ceph-cluster"><a href="#Deploying-a-new-ceph-cluster" class="headerlink" title="Deploying a new ceph cluster"></a>Deploying a new ceph cluster</h2><p>Cephadm bootstrap is the first step in initializing a Ceph cluster. It creates a small initial Ceph cluster by bootstrapping, which includes a monitor (mon) and a manager (mgr). This is the foundational step for the entire Ceph cluster deployment and management process.</p>
<p>The <code>cephadm bootstrap</code> command will perform the following actions:</p>
<ul>
<li><p>Create a monitor (mon) and a manager (mgr) <code>daemon</code> on the local host for the new cluster.</p>
</li>
<li><p>Generate a new SSH key for the Ceph cluster and add it to the root user’s <code>/root/.ssh/authorized_keys</code> file.</p>
</li>
<li><p>Write a copy of the public key to the <code>/etc/ceph/ceph.pub</code> file.</p>
</li>
<li><p>Write a minimal configuration file to <code>/etc/ceph/ceph.conf</code>, which is used for communication with the Ceph daemons.</p>
</li>
<li><p>Write a copy of the client.admin administrator (privileged) key to the <code>/etc/ceph/ceph.client.admin.keyring</code> file.</p>
</li>
<li><p>Add the _admin label to the bootstrap host. By default, any host with this label will also receive copies of the <code>/etc/ceph/ceph.conf</code> and <code>/etc/ceph/ceph.client.admin.keyring</code> files.</p>
</li>
</ul>
<p>If the hostname is <strong><u>Fully Qualified Domain Name</u></strong>(<code>FQDN</code>), you need to add the specific parameter: <code>--allow-fqdn-hostname</code>.</p>
<p>P.S. FQDN format could be like that, for example: <code>host.example.com.</code></p>
<p>host name: <code>host</code></p>
<p>domain name: <code>example.com</code></p>
<p>root domain: <code>.</code> (Omitted in daily use)</p>
<p>If you are doing a <strong><u>single-node</u></strong> deployment, you need to add the specific parameter: <code>--single-host-defaults</code>. </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cephadm bootstrap --mon-ip 172.16.173.129 --single-host-defaults --initial-dashboard-user admin --initial-dashboard-password Sunhaoyang --dashboard-password-noupdate --allow-fqdn-hostname</span><br></pre></td></tr></table></figure>

<p>This deployment uses a <strong><u>multi-node</u></strong> setup.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cephadm bootstrap --mon-ip 172.16.173.129 --initial-dashboard-user admin --initial-dashboard-password Sunhaoyang --dashboard-password-noupdate --allow-fqdn-hostname</span><br></pre></td></tr></table></figure>

<p>More than these parameters, all usage of all parameters could be checked by using <code>cephadm bootstrap --help</code>.</p>
<ul>
<li><p><code>--mon-ip</code> specifies the IP address of the monitor (mon) that will be created during the bootstrap process. This is the IP address of the host where the initial MON daemon will run.</p>
</li>
<li><p><code>--initial-dashboard-user</code> sets the username for the Ceph dashboard’s initial administrative user. In this case, the username will be admin.</p>
</li>
<li><p><code>--initial-dashboard-password</code> specifies the password for the initial administrative user of the Ceph dashboard. The password will be set to Sunhaoyang.</p>
</li>
<li><p><code>--dashboard-password-noupdate</code> prevents the Ceph cluster from automatically updating the dashboard password after the bootstrap process. This ensures the password specified in <code>--initial-dashboard-password</code> remains unchanged.</p>
</li>
<li><p><code>--allow-fqdn-hostname</code> allows the use of a Fully Qualified Domain Name (FQDN) as the hostname for the Ceph cluster’s initial node. This is useful when the hostname includes domain information, such as ceph.example.com.</p>
</li>
</ul>
<p>Finally, the installation console output looks like this.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Ceph Dashboard is now available at:</span><br><span class="line"></span><br><span class="line">             URL: https://ceph001.haoyang.cn:8443/</span><br><span class="line">            User: admin</span><br><span class="line">        Password: Sunhaoyang</span><br><span class="line">...</span><br><span class="line">Bootstrap complete.</span><br></pre></td></tr></table></figure>

<p>You could not use the promption <code>URL</code> to visit the front-end ceph website, because you did not set the resolution in your local <code>/etc/hosts</code> file. While, you could use IP address + port to visit it directly, such as: <a href="https://172.16.173.129:8443/">https://172.16.173.129:8443/</a>.</p>
<p>When you are opening the website, you may be reminded that the website is unsafe. Now, you need to agree with it by clicking <code>advanced</code> button and then clicking <code>continue</code> button.</p>
<p><img src="/../images/dashboard_yellow.png" alt="ceph_dashboard_yellow"></p>
<p>As shown in the image, the page has already prompted us to expand the cluster, and there is a yellow warning next to the dashboard icon in the top left corner. Next, let’s add some disks to the cluster.</p>
<h2 id="Deploying-OSD-resources"><a href="#Deploying-OSD-resources" class="headerlink" title="Deploying OSD resources"></a>Deploying OSD resources</h2><p>In Ceph, OSD (Object Storage Daemon) is one of the essential components of the storage cluster. Its main responsibilities include storing data, handling data replication, recovery, backfilling, and rebalancing operations.</p>
<p>Key Concepts of Ceph OSD:</p>
<ul>
<li><p>Data Storage:</p>
<p>OSDs are responsible for storing data objects. Each OSD usually corresponds to a physical storage device, such as a hard drive or SSD.</p>
</li>
<li><p>Data Replication:</p>
<p>To ensure high availability and durability, OSDs replicate data among themselves. Ceph uses the CRUSH algorithm to determine the placement of data.</p>
</li>
<li><p>Data Recovery:</p>
<p>When an OSD fails or goes offline, the cluster automatically recovers data from other OSDs and replicates it to new OSDs.</p>
</li>
<li><p>Backfilling and Rebalancing:</p>
<p>Backfilling refers to redistributing data after an OSD is restored or new OSDs are added to ensure data is evenly distributed.</p>
<p>Rebalancing ensures load balancing across OSDs to prevent overloading certain OSDs.</p>
</li>
<li><p>Monitoring and Management:</p>
<p>OSDs use a heartbeat mechanism to report their status to the Ceph cluster, ensuring cluster health and consistency.</p>
</li>
</ul>
<p>Having understood Ceph OSDs, let’s proceed to add some OSDs to the cluster to complete the expansion of the Ceph cluster.</p>
<p>Based on the <a href="#Deployment-Plan-Table">Deployment Plan Table</a>, you have already added four disks in total for each node. </p>
<p>Excluding the partation used for installing the operating system, there are three remaining disks: <code>nvme0n2</code>, <code>nvme0n3</code> and <code>nvme0n4</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph001 ~]# lsblk</span><br><span class="line">NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS</span><br><span class="line">sr0          11:0    1  1024M  0 rom</span><br><span class="line">nvme0n1     259:0    0   500G  0 disk</span><br><span class="line">├─nvme0n1p1 259:1    0   600M  0 part /boot/efi</span><br><span class="line">├─nvme0n1p2 259:2    0     1G  0 part /boot</span><br><span class="line">└─nvme0n1p3 259:3    0 498.4G  0 part</span><br><span class="line">  ├─rl-root 253:0    0 494.5G  0 lvm  /var/lib/containers/storage/overlay</span><br><span class="line">  │                                   /</span><br><span class="line">  └─rl-swap 253:1    0   3.9G  0 lvm  [SWAP]</span><br><span class="line">nvme0n2     259:4    0   500G  0 disk</span><br><span class="line">nvme0n3     259:5    0   500G  0 disk</span><br><span class="line">nvme0n4     259:6    0   500G  0 disk</span><br></pre></td></tr></table></figure>

<p>Then, you could use these three remaining disks and add OSD daemon into the cluster.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph001 ~]# ceph orch daemon add osd ceph001.haoyang.cn:/dev/nvme0n2</span><br><span class="line">Created osd(s) 0 on host &#x27;ceph001.haoyang.cn&#x27;</span><br><span class="line">[root@ceph001 ~]# ceph orch daemon add osd ceph001.haoyang.cn:/dev/nvme0n3</span><br><span class="line">Created osd(s) 1 on host &#x27;ceph001.haoyang.cn&#x27;</span><br><span class="line">[root@ceph001 ~]# ceph orch daemon add osd ceph001.haoyang.cn:/dev/nvme0n4</span><br><span class="line">Created osd(s) 2 on host &#x27;ceph001.haoyang.cn&#x27;</span><br></pre></td></tr></table></figure>

<p>Let’s check the list of OSD now.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph001 ~]# ceph osd crush tree</span><br><span class="line">ID  CLASS  WEIGHT   TYPE NAME</span><br><span class="line">-1         1.46489  root default</span><br><span class="line">-3         1.46489      host ceph001</span><br><span class="line"> 0    ssd  0.48830          osd.0</span><br><span class="line"> 1    ssd  0.48830          osd.1</span><br><span class="line"> 2    ssd  0.48830          osd.2</span><br></pre></td></tr></table></figure>

<p>If we manually add all the disks on each node one by one, it would be too tedious. Fortunately, we can use the parameter <code>--all-available-devices</code> to automatically detect and utilize all available storage devices in the system as OSDs. This simplifies the process of adding OSDs, eliminating the need to specify each device manually.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph001 ~]# ceph orch apply osd --all-available-devices</span><br><span class="line">Scheduled osd.all-available-devices update...</span><br></pre></td></tr></table></figure>

<h2 id="Add-new-hosts-to-the-cluster"><a href="#Add-new-hosts-to-the-cluster" class="headerlink" title="Add new hosts to the cluster"></a>Add new hosts to the cluster</h2><p><span style="color: red;">The New host must meet all the <a href="#Prerequisites">Prerequisites</a> of this article before it can be added to the cluster.</span></p>
<p>Distribute the cluster’s SSH key to the authorized_keys file of the root user on all hosts to enable passwordless operations.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph001 ~]# ssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph001.haoyang.cn</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line"></span><br><span class="line">[root@ceph001 ~]# ssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph002.haoyang.cn</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line"></span><br><span class="line">[root@ceph001 ~]# ssh-copy-id -f -i /etc/ceph/ceph.pub root@ceph003.haoyang.cn</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br></pre></td></tr></table></figure>

<p>Lets’ check the current status of cluster’s host list.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph001 ~]# ceph orch host ls --detail</span><br><span class="line">HOST                ADDR         LABELS  STATUS  VENDOR/MODEL               CPU    RAM    HDD  SSD      NIC</span><br><span class="line">ceph001.haoyang.cn  172.16.173.129  _admin          VMware, Inc. (VMware20,1)  4C/4T  4 GiB  -    4/2.1TB  1</span><br><span class="line">1 hosts in cluster</span><br></pre></td></tr></table></figure>

<p>When adding a host to a Ceph cluster, it is typically necessary to specify both the hostname and the IP address. This is because:</p>
<ul>
<li><p>Hostname: Ceph uses hostnames to identify nodes in the cluster. These hostnames must be unique and resolvable throughout the cluster (usually configured via &#x2F;etc&#x2F;hosts or DNS).</p>
</li>
<li><p>IP Address: The IP address is crucial for communication between Ceph nodes. Specifying the IP address ensures that Ceph knows how to communicate with the host, especially in environments with multiple network interfaces or complex network configurations.</p>
</li>
</ul>
<p>After adding a host, <strong>the new host will automatically trigger the download of container images and the startup of containers</strong>, which might take some time to be ready. Additionally, since we previously configured automatic OSD addition, the disks on the new host will be automatically added to the cluster.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph001 ~]# ceph orch host add ceph002.haoyang.cn 172.16.173.130</span><br><span class="line">Added host &#x27;ceph002.haoyang.cn&#x27; with addr &#x27;172.16.173.130&#x27;</span><br><span class="line"></span><br><span class="line">[root@ceph001 ~]# ceph orch host add ceph003.haoyang.cn 172.16.173.131</span><br><span class="line">Added host &#x27;ceph003.haoyang.cn&#x27; with addr &#x27;172.16.173.131&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@ceph001 ~]# ceph orch host ls --detail</span><br><span class="line">HOST                ADDR            LABELS  STATUS  VENDOR/MODEL                      CPU  RAM    HDD  SSD      NIC  </span><br><span class="line">ceph001.haoyang.cn  172.16.173.129  _admin          VMware, Inc. VMware (VMware20,1)  N/A  4 GiB  -    4/2.1TB  1    </span><br><span class="line">ceph002.haoyang.cn  172.16.173.130  _admin          VMware, Inc. VMware (VMware20,1)  N/A  4 GiB  -    4/2.1TB  1    </span><br><span class="line">ceph003.haoyang.cn  172.16.173.131                  VMware, Inc. VMware (VMware20,1)  N/A  4 GiB  -    4/2.1TB  1    </span><br><span class="line">3 hosts in cluster</span><br></pre></td></tr></table></figure>

<p>The container image download and container startup in the new host will take some time. You can use the command to check if all services are running normally.</p>
<p>If everything is normal, all services will be in the “running” state.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph001 ~]# ceph orch ps</span><br><span class="line">NAME                   HOST                PORTS             STATUS             REFRESHED  AGE  MEM USE  MEM LIM  VERSION  IMAGE ID      CONTAINER ID  </span><br><span class="line">alertmanager.ceph001   ceph001.haoyang.cn  *:9093,9094       running (-11706s)     9m ago  22h    19.4M        -  0.25.0   4d8d4d8334be  d7d85f0d5f90  </span><br><span class="line">ceph-exporter.ceph001  ceph001.haoyang.cn                    running (-11706s)     9m ago  22h    18.7M        -  19.2.0   fd3234b9d664  41365c9457ee  </span><br><span class="line">ceph-exporter.ceph002  ceph002.haoyang.cn                    running (-11708s)     7m ago  22h    5553k        -  19.2.0   fd3234b9d664  37efd9d7f4e1  </span><br><span class="line">ceph-exporter.ceph003  ceph003.haoyang.cn                    running (-11709s)     7m ago  22h    5666k        -  19.2.0   fd3234b9d664  5270951d5acd  </span><br><span class="line">crash.ceph001          ceph001.haoyang.cn                    running (-11706s)     9m ago  22h    6685k        -  19.2.0   fd3234b9d664  56d8da9604fa  </span><br><span class="line">crash.ceph002          ceph002.haoyang.cn                    running (-11707s)     7m ago  22h    6681k        -  19.2.0   fd3234b9d664  5fc552cacd65  </span><br><span class="line">crash.ceph003          ceph003.haoyang.cn                    running (-11709s)     7m ago  22h    6689k        -  19.2.0   fd3234b9d664  ffd2d7310ac6  </span><br><span class="line">grafana.ceph001        ceph001.haoyang.cn  *:3000            running (-11706s)     9m ago  22h    76.1M        -  9.4.12   f3e6303dba5e  fdf44407fb4c  </span><br><span class="line">mgr.ceph001.hkkqlh     ceph001.haoyang.cn  *:9283,8765,8443  running (-11706s)     9m ago  22h     551M        -  19.2.0   fd3234b9d664  7ba2eecea18b  </span><br><span class="line">mgr.ceph002.mldtvp     ceph002.haoyang.cn  *:8443,9283,8765  running (-11707s)     7m ago  22h     452M        -  19.2.0   fd3234b9d664  bdfd928dabf9  </span><br><span class="line">mon.ceph001            ceph001.haoyang.cn                    running (-11706s)     9m ago  22h     134M    2048M  19.2.0   fd3234b9d664  2bcdeda36a41  </span><br><span class="line">mon.ceph002            ceph002.haoyang.cn                    running (-11708s)     7m ago  22h     130M    2048M  19.2.0   fd3234b9d664  91486fa9f36b  </span><br><span class="line">mon.ceph003            ceph003.haoyang.cn                    running (-11709s)     7m ago  22h     129M    2048M  19.2.0   fd3234b9d664  345686a5334d  </span><br><span class="line">node-exporter.ceph001  ceph001.haoyang.cn  *:9100            running (-11706s)     9m ago  22h    14.7M        -  1.5.0    68cb0c05b3f2  9cbaabb099cc  </span><br><span class="line">node-exporter.ceph002  ceph002.haoyang.cn  *:9100            running (-11708s)     7m ago  22h    15.0M        -  1.5.0    68cb0c05b3f2  1b8fdb1f51c0  </span><br><span class="line">node-exporter.ceph003  ceph003.haoyang.cn  *:9100            running (-11709s)     7m ago  22h    12.6M        -  1.5.0    68cb0c05b3f2  0796493a5f8e  </span><br><span class="line">osd.0                  ceph001.haoyang.cn                    running (-11709s)     9m ago  22h    40.4M    4096M  19.2.0   fd3234b9d664  490045e69852  </span><br><span class="line">osd.1                  ceph001.haoyang.cn                    running (-11709s)     9m ago  22h    43.8M    4096M  19.2.0   fd3234b9d664  d0ce9e899dd7  </span><br><span class="line">osd.2                  ceph001.haoyang.cn                    running (-11709s)     9m ago  22h    54.2M    4096M  19.2.0   fd3234b9d664  c3678e3dc74e  </span><br><span class="line">osd.3                  ceph002.haoyang.cn                    running (4h)          7m ago   4h    50.6M    4096M  19.2.0   fd3234b9d664  8787bc6caa84  </span><br><span class="line">osd.4                  ceph003.haoyang.cn                    running (4h)          7m ago   4h    51.9M    4096M  19.2.0   fd3234b9d664  be6e18374b5a  </span><br><span class="line">osd.5                  ceph002.haoyang.cn                    running (4h)          7m ago   4h    49.2M    4096M  19.2.0   fd3234b9d664  1877027bdbab  </span><br><span class="line">osd.6                  ceph003.haoyang.cn                    running (4h)          7m ago   4h    47.6M    4096M  19.2.0   fd3234b9d664  8236520080e4  </span><br><span class="line">osd.7                  ceph003.haoyang.cn                    running (4h)          7m ago   4h    52.9M    4096M  19.2.0   fd3234b9d664  93ee38964a01  </span><br><span class="line">osd.8                  ceph002.haoyang.cn                    running (4h)          7m ago   4h    50.1M    4096M  19.2.0   fd3234b9d664  a737972f17c7  </span><br><span class="line">prometheus.ceph001     ceph001.haoyang.cn  *:9095            running (-11706s)     9m ago  22h    85.6M        -  2.43.0   77ee200e57dc  ce155b30e24f  </span><br></pre></td></tr></table></figure>

<h2 id="Assigning-new-management-privileges"><a href="#Assigning-new-management-privileges" class="headerlink" title="Assigning new management privileges"></a>Assigning new management privileges</h2><p>For convenience in management, we will add <code>ceph002.haoyang.cn</code> as a management host.</p>
<p>Before assigning management privileges, let’s take a look at the configuration files and keys of the <code>ceph002.haoyang.cn</code> host.</p>
<p>Based on the information, there are no keys or configuration files present.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph002 ~]# ls /etc/ceph</span><br><span class="line">rbdmap</span><br></pre></td></tr></table></figure>

<p>Similarly, without the appropriate permissions, it is not possible to retrieve cluster information.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph002 ~]# ceph -s</span><br><span class="line">Error initializing cluster client: ObjectNotFound(&#x27;RADOS object not found (error calling conf_read_file)&#x27;)</span><br></pre></td></tr></table></figure>

<p>Let’s assign the <code>_admin</code> label to ceph002.haoyang.cn.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph001 ~]# ceph orch host label add ceph002.haoyang.cn _admin</span><br><span class="line">Added label _admin to host ceph002.haoyang.cn</span><br></pre></td></tr></table></figure>

<p>Checking the current status of the cluster’s host list again.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph001 ~]# ceph orch host ls --detail</span><br><span class="line">HOST                ADDR            LABELS  STATUS  VENDOR/MODEL                      CPU  RAM    HDD  SSD      NIC  </span><br><span class="line">ceph001.haoyang.cn  172.16.173.129  _admin          VMware, Inc. VMware (VMware20,1)  N/A  4 GiB  -    4/2.1TB  1    </span><br><span class="line">ceph002.haoyang.cn  172.16.173.130  _admin          VMware, Inc. VMware (VMware20,1)  N/A  4 GiB  -    4/2.1TB  1    </span><br><span class="line">ceph003.haoyang.cn  172.16.173.131                  VMware, Inc. VMware (VMware20,1)  N/A  4 GiB  -    4/2.1TB  1    </span><br><span class="line">3 hosts in cluster</span><br></pre></td></tr></table></figure>

<p>Checking the keys or configuration files again in ceph002.haoyang.cn.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph002 ~]# ls /etc/ceph</span><br><span class="line">ceph.client.admin.keyring  ceph.conf  rbdmap</span><br></pre></td></tr></table></figure>

<p>We can now confirm that <code>ceph002.haoyang.cn</code> has management privileges.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph002 ~]# ls /etc/ceph</span><br><span class="line">ceph.client.admin.keyring  ceph.conf  rbdmap</span><br></pre></td></tr></table></figure>

<p> If the following command executes successfully, it indicates that it has successfully obtained the cluster information and the permissions are working correctly.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph002 ~]# ceph -s</span><br><span class="line">  cluster:</span><br><span class="line">    id:     365472d8-d815-11ef-90ff-000c29c84d93</span><br><span class="line">    health: HEALTH_OK</span><br><span class="line"> </span><br><span class="line">  services:</span><br><span class="line">    mon: 3 daemons, quorum ceph001,ceph002,ceph003 (age 4h)</span><br><span class="line">    mgr: ceph001.hkkqlh(active, since 4h), standbys: ceph002.mldtvp</span><br><span class="line">    osd: 9 osds: 9 up (since 4h), 9 in (since 4h)</span><br><span class="line"> </span><br><span class="line">  data:</span><br><span class="line">    pools:   1 pools, 1 pgs</span><br><span class="line">    objects: 2 objects, 449 KiB</span><br><span class="line">    usage:   244 MiB used, 4.4 TiB / 4.4 TiB avail</span><br><span class="line">    pgs:     1 active+clean</span><br></pre></td></tr></table></figure>

<h2 id="Check-the-status-of-the-Ceph-cluster"><a href="#Check-the-status-of-the-Ceph-cluster" class="headerlink" title="Check the status of the Ceph cluster"></a>Check the status of the Ceph cluster</h2><p>Since we have added a new host and new OSDs to the cluster, the yellow status on the dashboard should have turned green.</p>
<p><img src="/../images/dashboard_green.png" alt="ceph_dashboard_green"></p>
<p>Finally, let’s use the command to check the cluster status!</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@ceph001 ~]# ceph -s</span><br><span class="line">  cluster:</span><br><span class="line">    id:     365472d8-d815-11ef-90ff-000c29c84d93</span><br><span class="line">    health: HEALTH_OK</span><br><span class="line"> </span><br><span class="line">  services:</span><br><span class="line">    mon: 3 daemons, quorum ceph001,ceph002,ceph003 (age 5h)</span><br><span class="line">    mgr: ceph001.hkkqlh(active, since 5h), standbys: ceph002.mldtvp</span><br><span class="line">    osd: 9 osds: 9 up (since 5h), 9 in (since 5h)</span><br><span class="line"> </span><br><span class="line">  data:</span><br><span class="line">    pools:   1 pools, 1 pgs</span><br><span class="line">    objects: 2 objects, 449 KiB</span><br><span class="line">    usage:   244 MiB used, 4.4 TiB / 4.4 TiB avail</span><br><span class="line">    pgs:     1 active+clean</span><br></pre></td></tr></table></figure>

<p>With this, our ceph cluster deployment has been successfully completed!</p>
]]></content>
      <categories>
        <category>Cloud</category>
      </categories>
      <tags>
        <tag>Ceph</tag>
      </tags>
  </entry>
  <entry>
    <title>Complete Guide to Markdown shortcuts for typora</title>
    <url>//Tools/Markdown/Complete-Guide-to-Markdown-shortcuts-for-typora/index.html</url>
    <content><![CDATA[<h2 id="文字样式部分"><a href="#文字样式部分" class="headerlink" title="文字样式部分"></a>文字样式部分</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + 数字键`</span>快速创建各种等级的标题。(P.s.标题最小分化到6级标题。)</span><br><span class="line">使用<span class="code">`ctrl + 0`</span>可以快速将选中标题调成普通文本。</span><br><span class="line">使用<span class="code">`ctrl + 加号/减号`</span>对标题的级别进行升高和降低。</span><br></pre></td></tr></table></figure>

<h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + u`</span>添加下划线。</span><br></pre></td></tr></table></figure>

<p>P.s.下划线(<font color=red><b>U</b></font>nderline)，因此 <u><strong>+u</strong></u>。</p>
<h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`alt + shift + 5`</span>添加删除线。</span><br></pre></td></tr></table></figure>

<h3 id="字体加粗"><a href="#字体加粗" class="headerlink" title="字体加粗"></a>字体加粗</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + b`</span>加粗文字。</span><br></pre></td></tr></table></figure>

<p>P.s.粗体的(<font color=red><b>B</b></font>old)，因此 **<u>+b</u>**。</p>
<h3 id="字体倾斜"><a href="#字体倾斜" class="headerlink" title="字体倾斜"></a>字体倾斜</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + i`</span>倾斜文字。</span><br></pre></td></tr></table></figure>

<p>P.s.斜体的(<font color=red><b>I</b></font>talic)，因此 **<u>+i</u>**。</p>
<hr>
<h2 id="内容部分"><a href="#内容部分" class="headerlink" title="内容部分"></a>内容部分</h2><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + shift + q`</span>创建引用。</span><br></pre></td></tr></table></figure>

<p>P.s.引用(<font color=red><b>Q</b></font>uote)，因此 **<u>+q</u>**。</p>
<h3 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + k`</span>插入链接。</span><br></pre></td></tr></table></figure>

<p>P.s.超链接(Hyper<font color=red><b>link</b></font>)，因此 **<u>+k</u>**。</p>
<h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + shift + i`</span>插入图片。</span><br></pre></td></tr></table></figure>

<p>P.s.超链接(<font color=red><b>I</b></font>mage)，因此 **<u>+i</u>**。</p>
<h3 id="文档内部跳转"><a href="#文档内部跳转" class="headerlink" title="文档内部跳转"></a>文档内部跳转</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + home`</span>跳转至文档开头,使用<span class="code">`ctrl + end`</span> 跳转至文档末尾。</span><br></pre></td></tr></table></figure>

<p>P.s.home：起始 end：终止</p>
<h3 id="选择英文单词-中文"><a href="#选择英文单词-中文" class="headerlink" title="选择英文单词&#x2F;中文"></a>选择英文单词&#x2F;中文</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + d`</span>选中文本；使用<span class="code">`ctrl + shift + left/right`</span> 左右移动进行文本选中。</span><br></pre></td></tr></table></figure>

<p>P.s.向下填充(<font color=red><b>D</b></font>own)，因此 **<u>+d</u>**。</p>
<h3 id="按行选中文本"><a href="#按行选中文本" class="headerlink" title="按行选中文本"></a>按行选中文本</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + l`</span>选中光标所在行文本。</span><br></pre></td></tr></table></figure>

<p>P.s.排成一行(<font color=red><b>L</b></font>ine)，因此 **<u>+l</u>**。</p>
<h3 id="快速搜索文本内容"><a href="#快速搜索文本内容" class="headerlink" title="快速搜索文本内容"></a>快速搜索文本内容</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + f`</span>对全文本进行关键词搜索。</span><br></pre></td></tr></table></figure>

<p>P.s.找寻(<font color=red><b>F</b></font>ind)，因此 **<u>+f</u>**。</p>
<h3 id="快速替换文本"><a href="#快速替换文本" class="headerlink" title="快速替换文本"></a>快速替换文本</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + h`</span>对全文本进行指定词替换。</span><br></pre></td></tr></table></figure>

<p>P.s.替换(<font color=red><b>R</b></font>eplace)，但R键位被占用，转而使用 **<u>+h</u>**。</p>
<h3 id="快速生成表格"><a href="#快速生成表格" class="headerlink" title="快速生成表格"></a>快速生成表格</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + t`</span>创建自定义表格。</span><br></pre></td></tr></table></figure>

<p>P.s.表格(<font color=red><b>T</b></font>able)，因此 **<u>+t</u>**。</p>
<h3 id="快速打开最近浏览笔记"><a href="#快速打开最近浏览笔记" class="headerlink" title="快速打开最近浏览笔记"></a>快速打开最近浏览笔记</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + p`</span>打开最近浏览笔记。</span><br></pre></td></tr></table></figure>

<p>P.s.呈现(<font color=red><b>P</b></font>resent)，因此 **<u>+p</u>**。</p>
<h3 id="快速生成目录"><a href="#快速生成目录" class="headerlink" title="快速生成目录"></a>快速生成目录</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用 <span class="code">`[toc] + enter`</span>快速生成目录。</span><br></pre></td></tr></table></figure>

<p>P.s.目录表(<font color=red><b>T</b></font>able <font color=red><b>O</b></font>f <font color=red><b>C</b></font>ontents )，因此 **<u>[toc]</u>**。</p>
<h3 id="着重关键字"><a href="#着重关键字" class="headerlink" title="着重关键字"></a>着重关键字</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + shift + 反引号键(tab键上面那个键)`</span></span><br></pre></td></tr></table></figure>

<h3 id="快速创建代码块-自定义语言类型"><a href="#快速创建代码块-自定义语言类型" class="headerlink" title="快速创建代码块(自定义语言类型)"></a>快速创建代码块(自定义语言类型)</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + shift + k`</span>快速创建代码块，可自定义输入语言类型。</span><br></pre></td></tr></table></figure>

<div STYLE="page-break-after: always;"></div>

<h3 id="数学表达式-支持Latex语法"><a href="#数学表达式-支持Latex语法" class="headerlink" title="数学表达式(支持Latex语法)"></a>数学表达式(支持Latex语法)</h3><ul>
<li><p>行内公式</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用两个<span class="code">`$`</span>一前一后将公式内容包裹起来。</span><br></pre></td></tr></table></figure>

<p>例如不定积分公式：$\int f(x)dx &#x3D; F(x) + c (c\in {\forall} constants)$</p>
</li>
<li><p>行外公式</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + shift + m`</span>创建数学公式块</span><br></pre></td></tr></table></figure>

<p>P.s.数学(<font color=red><b>M</b></font>athematics)，因此 **<u>+m</u>**。</p>
<p>例如单调收敛定理：</p>
<p>$$<br>\forall x \in E , 0 \leq f_n(x) \leq f_{n+1}(x),n\in {N_+}.且\lim\limits_{n\to\infty}f_n(x)&#x3D;f(x).<br>那么，\lim\limits_{n\to\infty}\int_Ef(x)dx&#x3D;\int_Ef(x)dx.<br>$$</p>
<hr>
</li>
</ul>
<h2 id="工具自身部分"><a href="#工具自身部分" class="headerlink" title="工具自身部分"></a>工具自身部分</h2><h3 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + n`</span>创建新的.md文件。</span><br></pre></td></tr></table></figure>

<p>P.s.新建(<font color=red><b>N</b></font>ew)，因此 **<u>+n</u>**。</p>
<h3 id="打开已有-md文件"><a href="#打开已有-md文件" class="headerlink" title="打开已有.md文件"></a>打开已有.md文件</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + o`</span>选择打开已有.md文件。</span><br></pre></td></tr></table></figure>

<p>P.s.打开(<font color=red><b>O</b></font>pen)，因此 **<u>+o</u>**。</p>
<h3 id="保存-md文件"><a href="#保存-md文件" class="headerlink" title="保存.md文件"></a>保存.md文件</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + s`</span>保存已编辑好的.md文件。</span><br></pre></td></tr></table></figure>

<p>P.s.保存(<font color=red><b>S</b></font>ave)，因此 **<u>+s</u>**。</p>
<h3 id="关闭-md文件"><a href="#关闭-md文件" class="headerlink" title="关闭.md文件"></a>关闭.md文件</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + w`</span>关闭已保存.md文件。</span><br></pre></td></tr></table></figure>

<p>P.s.窗口(<font color=red><b>W</b></font>indow)，因此 **<u>+w</u>**。</p>
<h3 id="显示和隐藏侧边栏"><a href="#显示和隐藏侧边栏" class="headerlink" title="显示和隐藏侧边栏"></a>显示和隐藏侧边栏</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + shift + l`</span>来显示/隐藏侧边栏。</span><br></pre></td></tr></table></figure>

<h3 id="偏好设置"><a href="#偏好设置" class="headerlink" title="偏好设置"></a>偏好设置</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + comma`</span>打开偏好设置栏。</span><br></pre></td></tr></table></figure>

<h3 id="源代码模式"><a href="#源代码模式" class="headerlink" title="源代码模式"></a>源代码模式</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + /`</span>进入源代码模式。</span><br></pre></td></tr></table></figure>

<h3 id="全屏切换"><a href="#全屏切换" class="headerlink" title="全屏切换"></a>全屏切换</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`F11`</span>进入/退出全屏模式。</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Complete Guide to Markdown Features</title>
    <url>//Tools/Markdown/Complete-Guide-to-Markdown-Features/index.html</url>
    <content><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法：# 标题名字（井号的个数代表标题的级数，最多到六级标题）</span><br></pre></td></tr></table></figure>

<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr>
<div STYLE="page-break-after: always;"></div>

<h2 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h2><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法：用两个 ~ 来包裹删除的内容</span><br><span class="line">~~文本内容被删除~~</span><br></pre></td></tr></table></figure>

<p><del>文本内容被删除</del></p>
<h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法：用一个 \* 来包裹斜体的内容</span><br><span class="line"></span><br><span class="line"><span class="emphasis">_文本内容倾斜_</span></span><br></pre></td></tr></table></figure>

<p><em>文本内容倾斜</em></p>
<p>快捷键：选中需要斜体的内容后 <code>Ctrl</code>+<code>I</code></p>
<h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法：用两个 \* 来包裹加粗的内容</span><br><span class="line"></span><br><span class="line"><span class="strong">**文本内容加粗**</span></span><br></pre></td></tr></table></figure>

<p><strong>文本内容加粗</strong></p>
<p>快捷键：选中需要加粗的内容后 <code>Ctrl</code>+<code>B</code></p>
<h3 id="斜体-加粗"><a href="#斜体-加粗" class="headerlink" title="斜体+加粗"></a>斜体+加粗</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法：用三个 \* 来包裹斜体+加粗的内容</span><br><span class="line"></span><br><span class="line"><span class="strong">**<span class="emphasis">_文本内容既倾斜又加粗_</span>**</span></span><br></pre></td></tr></table></figure>

<p><strong><em>文本内容既倾斜又加粗</em></strong></p>
<h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">下划线是HTML语法：用 <span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>&lt;\u&gt; 来包裹添加下划线内容</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>文本内容添加下划线<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><u>文本内容添加下划线</u></p>
<p>快捷键：选中需要添加下划线的内容后 <code>Ctrl</code>+<code>U</code></p>
<h3 id="高亮（需在偏好设置勾选扩展语法）"><a href="#高亮（需在偏好设置勾选扩展语法）" class="headerlink" title="高亮（需在偏好设置勾选扩展语法）"></a>高亮（需在偏好设置勾选扩展语法）</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法：用 == 来包裹高亮内容</span><br><span class="line"></span><br><span class="line">==文本内容高亮==</span><br></pre></td></tr></table></figure>

<p>&#x3D;&#x3D;文本内容高亮&#x3D;&#x3D;</p>
<h3 id="下标（需在偏好设置勾选扩展语法）"><a href="#下标（需在偏好设置勾选扩展语法）" class="headerlink" title="下标（需在偏好设置勾选扩展语法）"></a>下标（需在偏好设置勾选扩展语法）</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法：用 ~ 来包裹下标内容</span><br><span class="line"></span><br><span class="line">水 H~2~O</span><br><span class="line">双氧水 H~2~O~2~</span><br></pre></td></tr></table></figure>

<p>水 H<del>2</del>O</p>
<p>双氧水 H<del>2</del>O<del>2</del></p>
<h3 id="上标（需在偏好设置内选扩展语法）"><a href="#上标（需在偏好设置内选扩展语法）" class="headerlink" title="上标（需在偏好设置内选扩展语法）"></a>上标（需在偏好设置内选扩展语法）</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法：用 ^ 来包裹上标内容</span><br><span class="line"></span><br><span class="line">平方米 m^2^</span><br><span class="line">立方米 m^3^</span><br></pre></td></tr></table></figure>

<p>平方米 m^2^<br>立方米 m^3^</p>
<hr>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>表格的源码格式：</p>
<p>使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| name     | gender |</span><br><span class="line">| -------- | ------ |</span><br><span class="line">| Torvalds | Male   |</span><br><span class="line">| Tove     | Female |</span><br></pre></td></tr></table></figure>

<blockquote>
<p>为了使 Markdown 更清晰，<code>|</code> 和 <code>-</code> 两侧需要至少有一个空格（最左侧和最右侧的 <code>|</code> 外就不需要了）。</p>
</blockquote>
<p>可以跳过以上描述，因为表格的 markdown 源代码是由typora自动生成的。</p>
<p>实际上输入 <code>| Name | Gender |</code> 并按下 <code>enter</code> 键将创建一个包含两列的表。</p>
<p>创建表后，焦点在该表上将弹出一个表格工具栏，您可以在左上角调整表格，居中居左居右对齐或删除表格。您还可以右上角使用上下文菜单来移动，复制和添加&#x2F;删除列&#x2F;行。还可以在表格中包括内联 Markdown 语法，例如链接，粗体，斜体或删除线。</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Gender</th>
</tr>
</thead>
<tbody><tr>
<td>Torvalds</td>
<td>Male</td>
</tr>
<tr>
<td>Tove</td>
<td>Female</td>
</tr>
</tbody></table>
<p>除此之外可以使用空格对齐不同行的单元格，并在左右两侧都使用 <code>|</code> 来标记单元格边界，在表头下方的分隔线标记中加入 <code>:</code>，即可标记下方单元格内容的对齐方式：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| Name     | Gender | Age |</span><br><span class="line">| :------- | :----: | --: |</span><br><span class="line">| Torvalds |  Male  |  55 |</span><br><span class="line">| Tove     | Female |  58 |</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">Name</th>
<th align="center">Gender</th>
<th align="center">Age</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Torvalds</td>
<td align="center">Male</td>
<td align="center">55</td>
</tr>
<tr>
<td align="left">Tove</td>
<td align="center">Female</td>
<td align="center">58</td>
</tr>
</tbody></table>
<p>使用快捷键<code>Ctrl</code>+<code>T</code>更方便(段落→表格→插入表格，即可查看快捷键)可以自定义表格大小。</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法：&gt;引用文本内容</span><br></pre></td></tr></table></figure>

<blockquote>
<p>引用文本内容</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 可以在引用中</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; &gt; 使用嵌套的引用</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>可以在引用中</p>
<blockquote>
<p>使用嵌套的引用</p>
</blockquote>
</blockquote>
<hr>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>语法：[TOC] + <code>enter</code></p>
<p>生成的目录内容会随笔者编辑而自动更新。</p>
<hr>
<div STYLE="page-break-after: always;"></div>

<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表–符号-空格"><a href="#无序列表–符号-空格" class="headerlink" title="无序列表–符号 空格"></a>无序列表–符号 空格</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 可以使用 <span class="code">`*`</span> 作为标记</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> 也可以使用 <span class="code">`+`</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 或者 <span class="code">`-`</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>可以使用 <code>*</code> 作为标记（不推荐使用星号）</p>
</li>
<li><p>也可以使用 <code>+</code></p>
</li>
<li><p>或者 <code>-</code></p>
</li>
</ul>
<h3 id="有序列表–数字-空格"><a href="#有序列表–数字-空格" class="headerlink" title="有序列表–数字 . 空格"></a>有序列表–数字 <code>.</code> 空格</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 有序列表以数字和 <span class="code">`.`</span> 开始；</span><br><span class="line"><span class="bullet">2.</span> 数字的序列并不会影响生成的列表序列；</span><br><span class="line"><span class="bullet">3.</span> 但仍然推荐按照自然顺序（1.2.3...）编写。</span><br></pre></td></tr></table></figure>

<ol>
<li><p>有序列表以数字和 <code>.</code> 开始；</p>
</li>
<li><p>数字的序列并不会影响生成的列表序列；</p>
</li>
<li><p>但仍然推荐按照自然顺序（1.2.3…）编写。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">可以使用：数字\. 来取消显示为列表（用反斜杠进行转义）</span><br></pre></td></tr></table></figure></li>
</ol>
<hr>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">```语言名称</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h3 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">也可以通过 <span class="code">``，插入行内代码（`</span> 是 <span class="code">`Tab`</span> 键上边、<span class="code">`ESC`</span>下面的、数字 <span class="code">`1`</span> 键左侧的那个按键）：</span><br><span class="line"></span><br><span class="line">例如 <span class="code">`Markdown`</span></span><br></pre></td></tr></table></figure>

<p><code>Markdown</code></p>
<hr>
<h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>可以在一行中使用三个或更多的 <code>*</code>、<code>-</code> 或 <code>_</code> 来添加分隔线（&#96;&#96;）：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">---</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<hr>
<hr>
<hr>
<h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法：</span><br><span class="line">未完成事项:- [ ]</span><br><span class="line">已完成事项:- [x]</span><br><span class="line">可以通过鼠标左键勾选或取消方框内的√。</span><br></pre></td></tr></table></figure>

<ul>
<li><input checked="" disabled="" type="checkbox"> 任务1</li>
<li><input disabled="" type="checkbox"> 任务2</li>
<li><input checked="" disabled="" type="checkbox"> 任务3</li>
</ul>
<hr>
<h2 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h2><h3 id="外部跳转–超链接"><a href="#外部跳转–超链接" class="headerlink" title="外部跳转–超链接"></a>外部跳转–超链接</h3><p>语法： <code>[注释/命名](具体链接)</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">帮助文档</span>](<span class="link">https://support.typoraio.cn/Markdown-Reference/</span>)</span><br></pre></td></tr></table></figure>

<p><a href="https://support.typoraio.cn/Markdown-Reference/">帮助文档</a></p>
<h3 id="内部跳转–本文件内跳"><a href="#内部跳转–本文件内跳" class="headerlink" title="内部跳转–本文件内跳"></a>内部跳转–本文件内跳</h3><p>语法： <code>[注释/命名](#要去的目的地--标题）</code>。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">跳转到文字</span>](<span class="link">#文字样式</span>)</span><br></pre></td></tr></table></figure>

<p><a href="#%E6%96%87%E5%AD%97%E6%A0%B7%E5%BC%8F">跳转到文字</a></p>
<h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>使用 <code>&lt;&gt;</code> 包括的 URL 或邮箱地址会被自动转换为超链接：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">&lt;https://www.baidu.com&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.baidu.com/">https://www.baidu.com</a></p>
<hr>
<h3 id="本地图片"><a href="#本地图片" class="headerlink" title="本地图片"></a>本地图片</h3><p>图像与链接类似， 但在链接语法之前需要添加额外的 <code>!</code> 字符。 图像语法如下所示：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">图片命名</span>](<span class="link">图片本地存储的路径</span>) P.s.用相对路径或绝对路径都可以</span><br><span class="line">或者直接拷贝到Typora内。</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="数学表达式-支持Latex语法"><a href="#数学表达式-支持Latex语法" class="headerlink" title="数学表达式(支持Latex语法)"></a>数学表达式(支持Latex语法)</h2><h3 id="内联公式"><a href="#内联公式" class="headerlink" title="内联公式"></a>内联公式</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用两个<span class="code">`$`</span>一前一后将公式内容包裹起来。</span><br></pre></td></tr></table></figure>

<p>例如不定积分公式：$\int f(x)dx &#x3D; F(x) + c (c\in {\forall} constants)$</p>
<h3 id="行外公式"><a href="#行外公式" class="headerlink" title="行外公式"></a>行外公式</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用<span class="code">`ctrl + shift + m`</span>创建数学公式块</span><br></pre></td></tr></table></figure>

<p>P.s.数学(<font color=red><b>M</b></font>athematics)，因此 **<u>+m</u>**。</p>
<p>例如单调收敛定理：</p>
<p>$$<br>\forall x \in E , 0 \leq f_n(x) \leq f_{n+1}(x),n\in {N_+}.且\lim\limits_{n\to\infty}f_n(x)&#x3D;f(x).<br>那么，\lim\limits_{n\to\infty}\int_Ef(x)dx&#x3D;\int_Ef(x)dx.<br>$$</p>
<hr>
<div STYLE="page-break-after: always;"></div>

<h2 id="利用Markdown画图"><a href="#利用Markdown画图" class="headerlink" title="利用Markdown画图"></a>利用Markdown画图</h2><p>MarkDown画图也是轻量级的，功能并不全。</p>
<p>但是MarkDown支持sequence，flowchart和mermaid三种图表类型。</p>
<p>sequence使用的是js-sequence-diagrams。</p>
<p>flowchart使用的是flowchart.js。</p>
<p>Mermaid 是一个用于画流程图、状态图、时序图、甘特图的库，使用 JS 进行本地渲染，广泛集成于许多 Markdown 编辑器中。Mermaid 作为一个使用 JS 渲染的库，生成的不是一个“图片”，而是一段 HTML 代码。</p>
<p>（不同的编辑器渲染的可能不一样）</p>
<table>
<thead>
<tr>
<th>图表类型</th>
<th>支持来源</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>Sequence</td>
<td>js-sequence-diagrams</td>
<td>UML 时序图</td>
</tr>
<tr>
<td>Flowchart</td>
<td>flowchart.js</td>
<td>流程图</td>
</tr>
<tr>
<td>Mermaid</td>
<td>mermaid</td>
<td>集成的强大的图表库，支持时序图、流程图、甘特图、类图、饼图等</td>
</tr>
</tbody></table>
<p>接下来我将一一介绍上述三种类型的图表。</p>
<h3 id="Sequence-Diagrams"><a href="#Sequence-Diagrams" class="headerlink" title="Sequence Diagrams"></a>Sequence Diagrams</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Title: MarkDown时序图实例</span><br><span class="line">participant 客户端</span><br><span class="line">participant 控制器</span><br><span class="line">participant 业务</span><br><span class="line">participant 数据库</span><br><span class="line"></span><br><span class="line"><span class="code">     客户端-&gt;&gt;数据库:提交数据店铺</span></span><br><span class="line"><span class="code">     Note right of 客户端:提交数据进行验证</span></span><br><span class="line"><span class="code">     控制器-&gt;&gt;控制器:验证数据完整性</span></span><br><span class="line"><span class="code">     Note left of 控制器:返回错误的字段信息</span></span><br><span class="line"><span class="code">     控制器--&gt;&gt;客户端:数据不完整</span></span><br><span class="line"><span class="code">     Note over 客户端: 用户输入通行证的账号、密码</span></span><br><span class="line"><span class="code">     控制器-&gt;&gt;业务:保存店铺到数据库</span></span><br><span class="line"><span class="code">     业务-&gt;&gt;业务:save店铺数据</span></span><br><span class="line"><span class="code">     业务--&gt;&gt;控制器:保存出现异常</span></span><br><span class="line"><span class="code">     控制器--&gt;&gt;客户端:保存成功</span></span><br><span class="line"><span class="code">     数据库--&gt;&gt;业务:success</span></span><br><span class="line"><span class="code">     业务--&gt;&gt;控制器:success</span></span><br><span class="line"><span class="code">     控制器--&gt;&gt;客户端:success 客户端</span></span><br><span class="line"><span class="code">     Note left of 控制器:返回正确的提示，并跳转到审核第二步</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Title: MarkDown时序图实例</span><br><span class="line"></span><br><span class="line">    participant 客户端</span><br><span class="line">    participant 控制器</span><br><span class="line">    participant 业务</span><br><span class="line">    participant 数据库</span><br><span class="line"></span><br><span class="line">     客户端-&gt;&gt;数据库:提交数据店铺</span><br><span class="line">     Note right of 客户端:提交数据进行验证</span><br><span class="line">     控制器-&gt;&gt;控制器:验证数据完整性</span><br><span class="line">     Note left of 控制器:返回错误的字段信息</span><br><span class="line">     控制器--&gt;&gt;客户端:数据不完整</span><br><span class="line">     Note over 客户端: 用户输入通行证的账号、密码</span><br><span class="line">     控制器-&gt;&gt;业务:保存店铺到数据库</span><br><span class="line">     业务-&gt;&gt;业务:save店铺数据</span><br><span class="line">     业务--&gt;&gt;控制器:保存出现异常</span><br><span class="line">     控制器--&gt;&gt;客户端:保存成功</span><br><span class="line">     数据库--&gt;&gt;业务:success</span><br><span class="line">     业务--&gt;&gt;控制器:success</span><br><span class="line">     控制器--&gt;&gt;客户端:success 客户端</span><br><span class="line">     Note left of 控制器:返回正确的提示，并跳转到审核第二步</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 代表实线 ， 主动发送消息，比如 request请求</span><br><span class="line">  &gt; 代表实心箭头 ， 同步消息，比如 AJAX 的同步请求</span><br><span class="line">  &gt; -- 代表虚线，表示返回消息，spring Controller return</span><br><span class="line">  &gt;</span><br><span class="line">  &gt; &gt; 代表非实心箭头 ，异步消息，比如AJAX请求</span><br></pre></td></tr></table></figure>

<div STYLE="page-break-after: always;"></div>

<h3 id="Flowcharts"><a href="#Flowcharts" class="headerlink" title="Flowcharts"></a>Flowcharts</h3><ul>
<li><strong>标准竖向流程图</strong></li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line"></span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line"></span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line"></span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line"></span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line"></span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line"></span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line"></span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">st=&gt;start: 出发</span><br><span class="line"></span><br><span class="line">op=&gt;operation: 下雨</span><br><span class="line"></span><br><span class="line">cond=&gt;condition: 带雨伞</span><br><span class="line"></span><br><span class="line">sub1=&gt;subroutine: 回家取伞</span><br><span class="line"></span><br><span class="line">io=&gt;inputoutput: 继续出行</span><br><span class="line"></span><br><span class="line">e=&gt;end: 到达目的地</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line"></span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line"></span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>标准横向流程图</strong></li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line"></span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line"></span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line"></span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line"></span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line"></span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line"></span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line"></span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line"></span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">st=&gt;start: 出发</span><br><span class="line"></span><br><span class="line">op=&gt;operation: 下雨</span><br><span class="line"></span><br><span class="line">cond=&gt;condition: 带雨伞</span><br><span class="line"></span><br><span class="line">sub1=&gt;subroutine: 回家取伞</span><br><span class="line"></span><br><span class="line">io=&gt;inputoutput: 继续出行</span><br><span class="line"></span><br><span class="line">e=&gt;end: 到达目的地</span><br><span class="line"></span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line"></span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line"></span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>

<div STYLE="page-break-after: always;"></div>

<h3 id="Mermaid"><a href="#Mermaid" class="headerlink" title="Mermaid"></a>Mermaid</h3><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">graph 方向描述</span><br><span class="line">图表中的其他语句...</span><br></pre></td></tr></table></figure>

<p>关键字graph表示一个流程图的开始，同时需要指定该图的方向。</p>
<p>其中“方向描述”为：</p>
<table>
<thead>
<tr>
<th align="left">用词</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">TB</td>
<td align="left">从上到下</td>
</tr>
<tr>
<td align="left">BT</td>
<td align="left">从下到上</td>
</tr>
<tr>
<td align="left">RL</td>
<td align="left">从右到左</td>
</tr>
<tr>
<td align="left">LR</td>
<td align="left">从左到右</td>
</tr>
</tbody></table>
<blockquote>
<p>T &#x3D; TOP，B &#x3D; BOTTOM，L &#x3D; LEFT，R &#x3D; RIGHT，D &#x3D; DOWN</p>
</blockquote>
<p>最常用的布局方向是TB、LR。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">graph TB;</span><br><span class="line">A--&gt;B</span><br><span class="line">B--&gt;C</span><br><span class="line">C--&gt;A</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TB;</span><br><span class="line">  A--&gt;B</span><br><span class="line">  B--&gt;C</span><br><span class="line">  C--&gt;A</span><br></pre></td></tr></table></figure>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">graph LR;</span><br><span class="line">A--&gt;B</span><br><span class="line">B--&gt;C</span><br><span class="line">C--&gt;A</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR;</span><br><span class="line">  A--&gt;B</span><br><span class="line">  B--&gt;C</span><br><span class="line">  C--&gt;A</span><br></pre></td></tr></table></figure>

<h5 id="节点形状"><a href="#节点形状" class="headerlink" title="节点形状"></a>节点形状</h5><table>
<thead>
<tr>
<th align="left">表述</th>
<th align="left">说明</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">id[文字]</td>
<td align="left">矩形节点</td>
<td>表示过程，也就是整个流程中的一个环节。</td>
</tr>
<tr>
<td align="left">id(文字)</td>
<td align="left">圆角矩形节点</td>
<td>表示开始和结束。</td>
</tr>
<tr>
<td align="left">id((文字))</td>
<td align="left">圆形节点</td>
<td>表示连接。为避免流程过长或有交叉，可将流程切开。</td>
</tr>
<tr>
<td align="left">id{文字}</td>
<td align="left">菱形节点</td>
<td>表示判断、决策。</td>
</tr>
<tr>
<td align="left">id&gt;文字]</td>
<td align="left">右向旗帜状节点</td>
<td></td>
</tr>
</tbody></table>
<p><strong>单向箭头线段</strong>：表示流程进行方向</p>
<blockquote>
<p>id即为节点的唯一标识，A~F 是当前节点名字，类似于变量名，画图时便于引用</p>
<p>括号内是节点中要显示的文字，默认节点的名字和显示的文字都为A</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">A</span><br><span class="line">B(圆角矩形节点)</span><br><span class="line">C[矩形节点]</span><br><span class="line">D((圆形节点))</span><br><span class="line">E&#123;菱形节点&#125;</span><br><span class="line">F&gt;右向旗帜状节点]</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">  A</span><br><span class="line">  B(圆角矩形节点)</span><br><span class="line">  C[矩形节点]</span><br><span class="line">  D((圆形节点))</span><br><span class="line">  E&#123;菱形节点&#125;</span><br><span class="line">  F&gt;右向旗帜状节点]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">%% 语法示例</span><br><span class="line">graph TB</span><br><span class="line"><span class="code">    sport(出发运动)--&gt; badminton[羽毛球]</span></span><br><span class="line"><span class="code">    badminton --&gt; IsWin&#123;&quot;有没有赢下单打比赛？&quot;&#125;</span></span><br><span class="line"><span class="code">    IsWin --&gt;|有|happy[赢下比赛]--&gt;goBack(回家)</span></span><br><span class="line"><span class="code">    IsWin --&gt;|没有|sad[再接再厉]--&gt;goBack</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    sport(出发运动)--&gt; badminton[羽毛球]</span><br><span class="line">    badminton --&gt; IsWin&#123;&quot;有没有赢下单打比赛？&quot;&#125;</span><br><span class="line">    IsWin --&gt;|有|happy[赢下比赛]--&gt;goBack(回家)</span><br><span class="line">    IsWin --&gt;|没有|sad[再接再厉]--&gt;goBack</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="连线"><a href="#连线" class="headerlink" title="连线"></a>连线</h5><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">A1--&gt;B1</span><br><span class="line">A2---B2</span><br><span class="line">A3--text---B3</span><br><span class="line">A4--text--&gt;B4</span><br><span class="line">A5-.-B5</span><br><span class="line">A6-.-&gt;B6</span><br><span class="line">A7-.text.-B7</span><br><span class="line">A8-.text.-&gt;B8</span><br><span class="line">A9===B9</span><br><span class="line">A10==&gt;B10</span><br><span class="line">A11==text===B11</span><br><span class="line">A12==text==&gt;B12</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line">  A1--&gt;B1</span><br><span class="line">  A2---B2</span><br><span class="line">  A3--text---B3</span><br><span class="line">  A4--text--&gt;B4</span><br><span class="line">  A5-.-B5</span><br><span class="line">  A6-.-&gt;B6</span><br><span class="line">  A7-.text.-B7</span><br><span class="line">  A8-.text.-&gt;B8</span><br><span class="line">  A9===B9</span><br><span class="line">  A10==&gt;B10</span><br><span class="line">  A11==text===B11</span><br><span class="line">  A12==text==&gt;B12</span><br></pre></td></tr></table></figure>

<h4 id="UML时序图"><a href="#UML时序图" class="headerlink" title="UML时序图"></a>UML时序图</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">顾客--&gt;API: 预约产品</span><br><span class="line">API--&gt;预约服务: 开始预约流程</span><br><span class="line">break 当预约失败时</span><br><span class="line">API--&gt;顾客: 展示预约失败原因</span><br><span class="line">end</span><br><span class="line">API--&gt;支付账单服务: 开始支付账单流程</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line"> 顾客--&gt;API: 预约产品</span><br><span class="line"> API--&gt;预约服务: 开始预约流程</span><br><span class="line"> break 当预约失败时</span><br><span class="line">  API--&gt;顾客: 展示预约失败原因</span><br><span class="line"> end</span><br><span class="line"> API--&gt;支付账单服务: 开始支付账单流程</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>​</p>
<p>​</p>
<h4 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">%% 语法示例</span><br><span class="line">gantt</span><br><span class="line">dateFormat YYYY-MM-DD</span><br><span class="line">title 软件开发甘特图</span><br><span class="line">section 设计</span><br><span class="line">需求 :done, des1, 2014-01-06,2014-01-08</span><br><span class="line">原型 :active, des2, 2014-01-09, 3d</span><br><span class="line">UI设计 : des3, after des2, 5d</span><br><span class="line">未来任务 : des4, after des3, 5d</span><br><span class="line">section 开发</span><br><span class="line">学习准备理解需求 :crit, done, 2014-01-06,24h</span><br><span class="line">设计框架 :crit, done, after des2, 2d</span><br><span class="line">开发 :crit, active, 3d</span><br><span class="line">未来任务 :crit, 5d</span><br><span class="line">耍 :2d</span><br><span class="line"></span><br><span class="line"><span class="code">        section 测试</span></span><br><span class="line"><span class="code">        功能测试                              :active, a1, after des3, 3d</span></span><br><span class="line"><span class="code">        压力测试                               :after a1  , 20h</span></span><br><span class="line"><span class="code">        测试报告                               : 48h</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title 软件开发甘特图</span><br><span class="line">        section 设计</span><br><span class="line">        需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        原型                      :active,  des2, 2014-01-09, 3d</span><br><span class="line">        UI设计                     :         des3, after des2, 5d</span><br><span class="line">        未来任务                     :         des4, after des3, 5d</span><br><span class="line"></span><br><span class="line">        section 开发</span><br><span class="line">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class="line">        设计框架                             :crit, done, after des2, 2d</span><br><span class="line">        开发                                 :crit, active, 3d</span><br><span class="line">        未来任务                              :crit, 5d</span><br><span class="line"></span><br><span class="line">        section 测试</span><br><span class="line">        功能测试                              :active, a1, after des3, 3d</span><br><span class="line">        压力测试                               :after a1  , 20h</span><br><span class="line">        测试报告                               : 48h</span><br></pre></td></tr></table></figure>

<div STYLE="page-break-after: always;"></div>

<h4 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法解释：&lt;|-- 表示继承，+ 表示 public，- 表示 private。</span><br></pre></td></tr></table></figure>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">动物 &lt;|-- 鸭子</span><br><span class="line">动物 &lt;|-- 鱼</span><br><span class="line">动物 &lt;|-- 斑马</span><br><span class="line">动物 : +int age</span><br><span class="line">动物 : +String gender</span><br><span class="line">动物: +isMammal()</span><br><span class="line">动物: +mate()</span><br><span class="line">class 鸭子&#123;</span><br><span class="line">+String beakColor</span><br><span class="line">+swim()</span><br><span class="line">+quack()</span><br><span class="line">&#125;</span><br><span class="line">class 鱼&#123;</span><br><span class="line">-int sizeInFeet</span><br><span class="line">-canEat()</span><br><span class="line">&#125;</span><br><span class="line">class 斑马&#123;</span><br><span class="line">+bool is<span class="emphasis">_wild</span></span><br><span class="line"><span class="emphasis">+run()</span></span><br><span class="line"><span class="emphasis">&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">      动物 &lt;|-- 鸭子</span><br><span class="line">      动物 &lt;|-- 鱼</span><br><span class="line">      动物 &lt;|-- 斑马</span><br><span class="line">      动物 : +int age</span><br><span class="line">      动物 : +String gender</span><br><span class="line">      动物: +isMammal()</span><br><span class="line">      动物: +mate()</span><br><span class="line">      class 鸭子&#123;</span><br><span class="line">          +String beakColor</span><br><span class="line">          +swim()</span><br><span class="line">          +quack()</span><br><span class="line">      &#125;</span><br><span class="line">      class 鱼&#123;</span><br><span class="line">          -int sizeInFeet</span><br><span class="line">          -canEat()</span><br><span class="line">      &#125;</span><br><span class="line">      class 斑马&#123;</span><br><span class="line">          +bool is_wild</span><br><span class="line">          +run()</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<div STYLE="page-break-after: always;"></div>

<h4 id="状态图"><a href="#状态图" class="headerlink" title="状态图"></a>状态图</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">stateDiagram</span><br><span class="line">[<span class="emphasis">*] --&gt; Still</span></span><br><span class="line"><span class="emphasis">Still --&gt; [*</span>]</span><br><span class="line">Still --&gt; Moving</span><br><span class="line">Moving --&gt; Still</span><br><span class="line">Moving --&gt; Crash</span><br><span class="line">Crash --&gt; [<span class="emphasis">*]</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stateDiagram</span><br><span class="line"> [*] --&gt; 静止</span><br><span class="line"> 静止 --&gt; [*]</span><br><span class="line"></span><br><span class="line"> 静止 --&gt; 运动</span><br><span class="line"> 运动 --&gt; 静止</span><br><span class="line"> 运动 --&gt; 碰撞</span><br><span class="line"> 碰撞 --&gt; [*]</span><br></pre></td></tr></table></figure>

<div STYLE="page-break-after: always;"></div>

<h4 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">pie</span><br><span class="line">title Pie Chart</span><br><span class="line">&quot;狗&quot; : 386</span><br><span class="line">&quot;猫&quot; : 85</span><br><span class="line">&quot;老鼠&quot; : 150</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pie</span><br><span class="line"> title Pie Chart</span><br><span class="line"> &quot;狗&quot; : 386</span><br><span class="line"> &quot;猫&quot; : 85</span><br><span class="line"> &quot;老鼠&quot; : 150</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>2025/01/15 English accumulation</title>
    <url>//Language/English/20250115/index.html</url>
    <content><![CDATA[<ul>
<li><p><strong>hands-on activity</strong>: It is an expression that means <strong>practical, active involvement or direct experience with something</strong>, rather than just theoretical or observational.It refers to doing something yourself rather than just studying or observing it.</p>
</li>
<li><p><strong>get to do something</strong>: It is an expression that means “<strong>have the opportunity or permission to do something</strong>“. It often conveys a sense of <strong>privillege or enjoyment</strong> in being able to do it.</p>
</li>
<li><p><strong>the bulk of</strong>: It is an expression that means “<strong>the majority</strong>“ or “<strong>the largest part</strong>“ of something.</p>
</li>
<li><p><strong>be provisioned to</strong>: It is an expression that means “<strong>be set up or prepared</strong> for a specific purpose or function”, typically with the necessary resources, equipment, or configuration required to perform a task or service.</p>
</li>
<li><p><strong>persona</strong>: “Persona” originally comes from <em>Latin</em>, where it referred to a mask worn by actors in ancient Roman theatre, and later came to mean the character an individual presents to the outside world. It is often used in psychology to describe the social or public identity someone assumes. Currently, it is the <strong>identity or role</strong> that someone presents to the outside world, often shaped by social expectations or context.</p>
</li>
<li><p><strong>foremost</strong>: It is used to describe something that is <strong>the most important</strong> or <strong>the leading</strong> in a given situation, whether in terms of importance, position, or rank. It’s a formal word and often used in more serious or academic contexts to <strong>highlight priorities or leadership</strong>.</p>
</li>
<li><p><strong>as distinct from</strong>: It is used to <strong>show the contrast, highlight differences or to make a clear distinction between two things</strong>, indicating that they are different from each other in significant ways. It’s typically used to clarify or emphasize the separation between ideas, objects, or concepts.</p>
</li>
<li><p><strong>correlate</strong>: It means to <strong>establish or indicate a relationship or connection between two things</strong>, where changes in one thing are associated with changes in another. It can be used in contexts involving statistics, research, or any situation where there is a noticeable relationship between two factors.</p>
</li>
<li><p><strong>consultant</strong>: It generally refers to a <strong>professional</strong> who offers expert advice or guidance in a particular field. A consultant’s role is generally focused on <strong>advisory</strong> work rather than direct implementation or execution.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Language</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>Ceph Series (Chapter 1): Introducing Red Hat Ceph Storage Architecture</title>
    <url>//Cloud/Ceph/Introducing-Red-Hat-Ceph-Storage-Architecture/index.html</url>
    <content><![CDATA[<h2 id="Personas"><a href="#Personas" class="headerlink" title="Personas"></a>Personas</h2><p>The personas that are presented here embody the most common roles of Red Hat Ceph Storage users. You can simply understand the meaning of the word as “user role”.</p>
<p>In Red Hat Ceph Storage, there are three types of personas, namely the Storage Administrator, the Storage Operator and other Storage-related personas.</p>
<h3 id="Storage-Administrator"><a href="#Storage-Administrator" class="headerlink" title="Storage Administrator"></a><strong>Storage Administrator</strong></h3><p>The primary persona for Red Hat Ceph is the storage administrator. A Ceph storage administrator performs the following tasks:</p>
<ul>
<li><blockquote>
<p>Installs, configures, and maintains a Ceph storage cluster.</p>
</blockquote>
</li>
<li><blockquote>
<p>Educates infrastructure architects about Ceph capabilities and features.</p>
</blockquote>
</li>
<li><blockquote>
<p>Informs users about Ceph data presentation and methods, as choices for their data applications.</p>
</blockquote>
</li>
<li><blockquote>
<p>Provides resilience and recovery, such as replication, backup, and disaster recovery methods.</p>
</blockquote>
</li>
<li><blockquote>
<p>Automates and integrates through Infrastructure as Code.</p>
</blockquote>
</li>
<li><blockquote>
<p>Provides access for data analytics and advanced mass data mining.</p>
</blockquote>
</li>
</ul>
<h3 id="Storage-Operator"><a href="#Storage-Operator" class="headerlink" title="Storage Operator"></a><strong>Storage Operator</strong></h3><p>The secondary persona for Red Hat Ceph is the storage operator.Storage operators primarily use <em>the Ceph Dashboard GUI</em> to view and respond to cluster alerts and statistics. They also perform routine storage administration tasks that are defined as Dashboard workflows, such as replacing a failed storage device.</p>
<h3 id="Other-Storage-related-Personas"><a href="#Other-Storage-related-Personas" class="headerlink" title="Other Storage-related Personas"></a><strong>Other Storage-related Personas</strong></h3><p>Other personas that use Ceph directly include <em>application developers, project managers, and service administrators</em> with data processing, data warehouse, big data, and similar application needs. The storage administrator frequently communicates with these personas.</p>
<ul>
<li><p>Cloud Operator</p>
<blockquote>
<p>A cloud operator administers cloud resources at their organization, such as OpenStack or OpenShift infrastructures. The storage administrator works closely with a cloud operator to maintain the Ceph cluster that is configured to provide storage for those platforms.</p>
</blockquote>
</li>
<li><p>Automation Engineer</p>
<blockquote>
<p>Automation engineers frequently use Ceph directly. An automation engineer is responsible for creating playbooks for commonly repeated tasks. Storage administrators would be familiar with these same actions because they are typically the foremost Ceph subject matter experts.</p>
</blockquote>
</li>
<li><p>Application Developer (DevOps Developer)</p>
<blockquote>
<p>An application developer can be an original coder, maintainer, or other cloud user who is responsible for the correct deployment and behavior of an application. A storage administrator coordinates with the application developer to ensure that storage resources are available, sets quotas, and secures the application storage.</p>
</blockquote>
</li>
<li><p>Deployment Engineer (DevOps Engineer)</p>
<blockquote>
<p>In larger environments, dedicated personnel perform, manage, and tune application deployments, working with the storage administrator and the application developer.</p>
</blockquote>
</li>
<li><p>Application Architect</p>
<blockquote>
<p>A storage administrator relies on the application architect as a subject matter expert who can correlate between Ceph infrastructure layout and resource availability, scaling, and latency. This archicture expertise helps the storage administrator to design complex application deployments effectively. To support the cloud users and their applications, a storage administrator must comprehend those same aspects of resource availability, scaling, and latency.</p>
</blockquote>
</li>
<li><p>Infrastructure Architect</p>
<blockquote>
<p>A storage administrator must master the storage cluster’s architectural layout to manage resource location, capacity, and latency. The infrastructure architect for the Ceph cluster deployment and maintenance is a primary source of information for the storage administrator. The infrastructure architect might be a cloud service provider employee or a vendor solutions architect or consultant.</p>
</blockquote>
</li>
<li><p>Data Center Operator</p>
<blockquote>
<p>Personas at the lower Ceph storage infrastructure layer support data provisioning. Data center operators are typically employed by the public cloud service provider or the organization’s internal IT group in a private data center cloud. The storage administrator opens service tickets with the relevant public cloud service provider or internal IT group.</p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>Cloud</category>
      </categories>
      <tags>
        <tag>Ceph</tag>
      </tags>
  </entry>
</search>
